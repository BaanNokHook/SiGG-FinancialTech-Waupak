@model GM.Data.Model.Report.ReportCriteriaModel
@{
    /**/

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}
<section class="working-content">
    <div class="container-fluid container-fixed">
        <!-- PageTitle -->
        <div class="row row-fixed">
            <div class="col-lg-12 col-fixed">
                <div class="page-title">
                    <div class="breadcrumb-wrap">
                        <ol class="breadcrumb" id="NavBar"></ol>
                    </div>
                    <div class="title">
                        <h1>
                            Daily Transaction Report
                        </h1>
                    </div>
                </div>
            </div>
        </div>
        <!-- Content Zone -->
        <div class="row row-fixed partialViewWrapper">
            <div class="col-xs-12 col-fixed">

                <!-- Search Zone -->
                @*<iframe src='@System.Configuration.ConfigurationManager.AppSettings["Reportpath"]/DailyTransactionReport?controllername=@this.ViewContext.RouteData.Values["controller"].ToString()' style="border:0;width:100%;height: auto;min-height: 750px;overflow: hidden!important;"></iframe>*@
                <div class="container-fluid container-fixed">
                    <div class="row row-fixed">
                        <div class="col-xs-12 col-fixed">
                            <div class="box-content">
                                <div class="box-header">
                                    <div class="left-item">
                                        <div class="title">
                                            <h3>Search Report</h3>
                                        </div>
                                    </div>
                                    <div class="right-item">
                                        <button id="user-master" class="btn btn-link less-more-option">
                                            Show less option
                                        </button>
                                    </div>
                                </div>
                                @using (Html.BeginForm())
                                {
                                    <div class="form-container form-horizontal">
                                        <div class="row">
                                            <div class="col-xs-12 form-wrapper-950 form-center-fix">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.trade_date_from, new { @class = "control-label col-xs-2" })
                                                    <div class="col-xs-4">
                                                        <div class="input-group date input-range input-date">
                                                            @Html.EditDateFor(model => model.trade_date_from_string, new { @class = "form-control date-time-picker" })
                                                            <span class="input-group-addon default date-pick-btn">
                                                                <span class="feather-icon icon-calendar"></span>
                                                            </span>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-5 col-fix-range-to">
                                                        <div class="input-group date input-range input-date">
                                                            <span class="input-group-addon text-in-group pl-0">To</span>
                                                            @Html.EditDateFor(model => model.trade_date_to_string, new { @class = "form-control date-time-picker" })
                                                            <span class="input-group-addon default">
                                                                <span class="feather-icon icon-calendar"></span>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="advance-form">
                                            <div class="row">
                                                <div class="col-xs-12 form-wrapper-950 form-center-fix">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.settlement_date_from, new { @class = "control-label col-xs-2" })
                                                        <div class="col-xs-4">
                                                            <div class="input-group date input-range input-date">
                                                                @Html.EditDateFor(model => model.settlement_date_from_string, new { @class = "form-control date-time-picker" })
                                                                <span class="input-group-addon default date-pick-btn">
                                                                    <span class="feather-icon icon-calendar"></span>
                                                                </span>
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-5 col-fix-range-to">
                                                            <div class="input-group date input-range input-date">
                                                                <span class="input-group-addon text-in-group pl-0">To</span>
                                                                @Html.EditDateFor(model => model.settlement_date_to_string, new { @class = "form-control date-time-picker" })
                                                                <span class="input-group-addon default">
                                                                    <span class="feather-icon icon-calendar"></span>
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.maturity_date_from, new { @class = "control-label col-xs-2" })
                                                        <div class="col-xs-4">
                                                            <div class="input-group date input-range input-date">
                                                                @Html.EditDateFor(model => model.maturity_date_from_string, new { @class = "form-control date-time-picker" })
                                                                <span class="input-group-addon default date-pick-btn">
                                                                    <span class="feather-icon icon-calendar"></span>
                                                                </span>
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-5 col-fix-range-to">
                                                            <div class="input-group date input-range input-date">
                                                                <span class="input-group-addon text-in-group pl-0">To</span>
                                                                @Html.EditDateFor(model => model.maturity_date_to_string, new { @class = "form-control date-time-picker" })
                                                                <span class="input-group-addon default">
                                                                    <span class="feather-icon icon-calendar"></span>
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group mb-0">
                                                        <label class="control-label col-xs-2">Trans No.</label>
                                                        <div class="col-xs-4">
                                                            @Html.EditorFor(model => model.trans_no_from, new { htmlAttributes = new { @class = "form-control w-100" } })

                                                        </div>
                                                        <div class="col-xs-5 col-fix-range-to">
                                                            <div class="input-group date input-range text-only input-date">
                                                                <span class="input-group-addon text-in-group pl-0">To</span>
                                                                @Html.EditorFor(model => model.trans_no_to, new { htmlAttributes = new { @class = "form-control w-100" } })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <hr>
                                            </div>
                                            <div class="row">
                                                <!-- Add new class form-center-fix -->
                                                <div class="col-xs-12 form-wrapper-950 form-center-fix">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.counterparty_code, new { @class = "control-label col-xs-2" })
                                                        <div class="col-xs-4">
                                                            <div class="dropdown">
                                                                <button class="btn btn-default dropdown-toggle" id="ddl_counterparty" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                                    @Html.SpanFor(model => model.counterparty_code_name, "Select...", new { @class = "selected-data" })
                                                                    @Html.TextBoxFor(model => model.counterparty_code, new { @class = "selected-value hidden" })
                                                                    @Html.TextBoxFor(model => model.counterparty_code_name, new { @class = "selected-data hidden" })
                                                                    <span class="caret"></span>
                                                                </button>
                                                                <div class="dropdown-menu">
                                                                    <div class="search-dropdown-menu">
                                                                        <input type="text" data-action="@Url.Action("FillCounterParty", (string) ViewContext.RouteData.Values["controller"])" id="txt_counterparty" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                                        <i class="feather-icon icon-search"></i>
                                                                    </div>
                                                                    <hr>
                                                                    <ul id="ul_counterparty"></ul>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.instrument_id, new { @class = "control-label col-xs-2" })
                                                        <div class="col-xs-4">
                                                            <div class="dropdown">
                                                                <button class="btn btn-default dropdown-toggle" id="ddl_instrument_code" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                                    @Html.SpanFor(model => model.instrument_code_name, "Select...", new { @class = "selected-data" })
                                                                    @Html.TextBoxFor(model => model.instrument_id, new { @class = "selected-value hidden" })
                                                                    @Html.TextBoxFor(model => model.instrument_code_name, new { @class = "selected-data hidden" })
                                                                    <span class="caret"></span>
                                                                </button>
                                                                <div class="dropdown-menu">
                                                                    <div class="search-dropdown-menu">
                                                                        <input type="text" data-action="@Url.Action("FillInstrumentCode", (string) ViewContext.RouteData.Values["controller"])" id="txt_instrument_code" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                                        <i class="feather-icon icon-search"></i>
                                                                    </div>
                                                                    <hr>
                                                                    <ul id="ul_instrument_code"></ul>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        @Html.LabelFor(model => model.repo_deal_type, "Instrument Type", new { @class = "control-label col-xs-2" })
                                                        <div class="col-xs-4">
                                                            <div class="dropdown">
                                                                <button class="btn btn-default dropdown-toggle" id="ddl_repodealtype" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                                    @Html.SpanFor(model => model.repo_deal_type_name, "Select...", new { @class = "selected-data" })
                                                                    @Html.TextBoxFor(model => model.repo_deal_type, new { @class = "selected-value hidden" })
                                                                    @Html.TextBoxFor(model => model.repo_deal_type_name, new { @class = "selected-data hidden" })
                                                                    <span class="caret"></span>
                                                                </button>
                                                                <div class="dropdown-menu">
                                                                    <div class="search-dropdown-menu">
                                                                        <input type="text" data-action="@Url.Action("FillRepoDealType", (string) ViewContext.RouteData.Values["controller"])" id="txt_repodealtype" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                                        <i class="feather-icon icon-search"></i>
                                                                    </div>
                                                                    <hr>
                                                                    <ul id="ul_repodealtype"></ul>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.port, new { @class = "control-label col-xs-2" })
                                                        <div class="col-xs-4">
                                                            <div class="dropdown">
                                                                <button class="btn btn-default dropdown-toggle" id="ddl_port" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                                    @Html.SpanFor(model => model.port_name, "Select...", new { @class = "selected-data" })
                                                                    @Html.TextBoxFor(model => model.port, new { @class = "selected-value hidden" })
                                                                    @Html.TextBoxFor(model => model.port_name, new { @class = "selected-data hidden" })
                                                                    <span class="caret"></span>
                                                                </button>
                                                                <div class="dropdown-menu">
                                                                    <div class="search-dropdown-menu">
                                                                        <input type="text" data-action="@Url.Action("FillPort", (string) ViewContext.RouteData.Values["controller"])" id="txt_port" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                                        <i class="feather-icon icon-search"></i>
                                                                    </div>
                                                                    <hr>
                                                                    <ul id="ul_port"></ul>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        @Html.LabelFor(model => model.currency, new { @class = "control-label col-xs-2" })
                                                        <div class="col-xs-4">
                                                            <div class="dropdown">
                                                                <button class="btn btn-default dropdown-toggle" id="ddl_currency" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                                    @Html.SpanFor(model => model.currency, "Select...", new { @class = "selected-data" })
                                                                    @Html.TextBoxFor(model => model.currency, new { @class = "selected-value hidden" })
                                                                    @Html.TextBoxFor(model => model.currency, new { @class = "selected-data hidden" })
                                                                    <span class="caret"></span>
                                                                </button>
                                                                <div class="dropdown-menu">
                                                                    <div class="search-dropdown-menu">
                                                                        <input type="text" data-action="@Url.Action("FillCurrency", (string) ViewContext.RouteData.Values["controller"])" id="txt_currency" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                                        <i class="feather-icon icon-search"></i>
                                                                    </div>
                                                                    <hr>
                                                                    <ul id="ul_currency"></ul>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Button Section -->
                                        <div class="row">
                                            <hr>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 mt-25" style="text-align: center;">
                                                <!-- PDF export button -->
                                                <!-- Excel Export Button -->
                                                <button class="btn btn-excel btn-round btn-main mr-4" name="Excel" type="submit">
                                                    <i class="feather-icon icon-download"></i>
                                                    Export in Excel
                                                </button>
                                                <button class="btn btn-link btn-link-secondary" onclick="formreset()" type="reset">Clear Data</button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Styles {
    <style>
        body {
        }
    </style>
}

@section Scripts {
    @Scripts.RenderFormat("<script type=\"text/javascript\" src=\"{0}?nocache=" + DateTime.Now.ToString("ddmmyyyyHHmmss") + "\"></script>", "~/Areas/Report/Scripts/GM.ReportDailyTransaction.js")
    @Scripts.RenderFormat("<script type=\"text/javascript\" src=\"{0}?nocache=" + DateTime.Now.ToString("ddmmyyyyHHmmss") + "\"></script>", "~/Areas/Report/Scripts/GM.Validation.js")
    <script>
        $(document).ready(function () {
            $("#NavBar").html($('#NavReportDailyTransaction').val());

            var budate = $("#BusinessDate").text();

            var formatmmddyyyydate = budate.split("/");
            formatmmddyyyydate = formatmmddyyyydate[1] + "/" + formatmmddyyyydate[0] + "/" + formatmmddyyyydate[2];
            var b_date = new Date(formatmmddyyyydate);

            $("#trade_date_from_string").on("dp.change", function (e) {
                if (e.date) {

                    var to = $('#trade_date_to_string').data("DateTimePicker").date();
                    if (to !== null) {
                        var diff = to.diff(e.date, 'days');
                        if (diff < 0) {
                            $('#trade_date_to_string').data("DateTimePicker").date(e.date);
                        }
                        else if (diff > 366) {
                            swal("Warning", "Date range is over 1 year. Please try select date again.", "warning");
                            $('#trade_date_to_string').data("DateTimePicker").date(e.date.add(1, 'years'));
                        }
                    }

                } else {
                    //$('#trade_date_from_string').data("DateTimePicker").date(b_date);
                    //$('#trade_date_to_string').data("DateTimePicker").date(b_date);
                }
            });

            $("#trade_date_to_string").on("dp.change", function (e) {
                if (e.date) {

                    var from = $('#trade_date_from_string').data("DateTimePicker").date();
                    var diff = e.date.diff(from, 'days');
                    if (diff < 0) {
                        $('#trade_date_from_string').data("DateTimePicker").date(e.date);
                    }
                    else if (diff > 366) {
                        swal("Warning", "Date range is over 1 year. Please try select date again.", "warning");
                        $('#trade_date_to_string').data("DateTimePicker").date(from.add(1, 'years'));
                    }
                } else {
                    //$('#trade_date_from_string').data("DateTimePicker").date(b_date);
                    //$('#trade_date_to_string').data("DateTimePicker").date(b_date);
                }
            });

            $("#settlement_date_from_string").on("dp.change", function (e) {
                if (e.date) {

                    var to = $('#settlement_date_to_string').data("DateTimePicker").date();
                    if (to !== null) {
                        var diff = to.diff(e.date, 'days');
                        if (diff < 0) {
                            $('#settlement_date_to_string').data("DateTimePicker").date(e.date);
                        }
                        else if (diff > 366) {
                            swal("Warning", "Date range is over 1 year. Please try select date again.", "warning");
                            $('#settlement_date_to_string').data("DateTimePicker").date(e.date.add(1, 'years'));
                        }
                    }

                } else {
                    //$('#settlement_date_from_string').data("DateTimePicker").date(b_date);
                    //$('#settlement_date_to_string').data("DateTimePicker").date(b_date);
                }
            });

            $("#settlement_date_to_string").on("dp.change", function (e) {
                if (e.date) {

                    var from = $('#settlement_date_from_string').data("DateTimePicker").date();
                    var diff = e.date.diff(from, 'days');
                    if (diff < 0) {
                        $('#settlement_date_from_string').data("DateTimePicker").date(e.date);
                    }
                    else if (diff > 366) {
                        swal("Warning", "Date range is over 1 year. Please try select date again.", "warning");
                        $('#settlement_date_to_string').data("DateTimePicker").date(from.add(1, 'years'));
                    }
                } else {
                    //$('#settlement_date_from_string').data("DateTimePicker").date(b_date);
                    //$('#settlement_date_to_string').data("DateTimePicker").date(b_date);
                }
            });

            $("#maturity_date_from_string").on("dp.change", function (e) {
                if (e.date) {

                    var to = $('#maturity_date_to_string').data("DateTimePicker").date();
                    if (to !== null) {
                        var diff = to.diff(e.date, 'days');
                        if (diff < 0) {
                            $('#maturity_date_to_string').data("DateTimePicker").date(e.date);
                        }
                        else if (diff > 366) {
                            swal("Warning", "Date range is over 1 year. Please try select date again.", "warning");
                            $('#maturity_date_to_string').data("DateTimePicker").date(e.date.add(1, 'years'));
                        }
                    }

                } else {
                    //$('#maturity_date_from_string').data("DateTimePicker").date(b_date);
                    //$('#maturity_date_to_string').data("DateTimePicker").date(b_date);
                }
            });

            $("#maturity_date_to_string").on("dp.change", function (e) {
                if (e.date) {

                    var from = $('#maturity_date_from_string').data("DateTimePicker").date();
                    var diff = e.date.diff(from, 'days');
                    if (diff < 0) {
                        $('#maturity_date_from_string').data("DateTimePicker").date(e.date);
                    }
                    else if (diff > 366) {
                        swal("Warning", "Date range is over 1 year. Please try select date again.", "warning");
                        $('#maturity_date_to_string').data("DateTimePicker").date(from.add(1, 'years'));
                    }
                } else {
                    //$('#maturity_date_from_string').data("DateTimePicker").date(b_date);
                    //$('#maturity_date_to_string').data("DateTimePicker").date(b_date);
                }
            });
        });
    </script>
}