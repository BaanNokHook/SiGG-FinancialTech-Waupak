@model GM.Data.View.Static.PurposeViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

<section class="working-content">
    <div class="container-fluid container-fixed">
        <!-- PageTitle -->
        <div class="row row-fixed">
            <div class="col-lg-12 col-fixed">
                <div class="page-title">
                    <div class="breadcrumb-wrap">
                        <ol class="breadcrumb" id="NavBar"></ol>
                    </div>
                    <div class="title">
                        <h1>
                            Purpose
                        </h1>
                    </div>
                </div>
            </div>
        </div>

        <!-- Content Zone -->
        <div class="row row-fixed">
            <div class="col-xs-12 col-fixed">
                <!-- Div Search -->
                <div class="box-content" id="search-form-modal">
                    <div class="box-header">
                        <div class="left-item">
                            <div class="title">
                                <h3>Search @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])</h3>
                            </div>
                        </div>
                    </div>
                    @using (Html.BeginForm("Search", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { @class = "one-col-form", id = "search-form" }))
                    {
                        <div class="form-container form-horizontal">
                            <div class="row">
                                <div class="col-xs-12 form-wrapper-1100">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FormSearch.purpose, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            @Html.EditorForValidate(model => model.FormSearch.purpose, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                        @Html.LabelFor(model => model.FormSearch.description, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            @Html.EditorFor(model => model.FormSearch.description, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <hr>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <button class="btn btn-primary btn-round btn-main btn-search" type="submit">Confirm</button>
                                    <button class="btn btn-link btn-link-secondary" type="reset">Clear Data</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Div Detail -->
                <div class="box-content table-content">
                    <div class="group box-header-wrapper">
                        <div class="box-header">
                            <div class="left-item">
                                <div class="title">
                                    <h3>Details</h3>
                                </div>
                            </div>
                            <div class="right-item">
                                <div class="add-data">
                                    <div class="dropdown">
                                        <button class="btn btn-primary btn-round dropdown-toggle" type="button" id="btnAdd" form-mode="add" @(!IsCreate ? "disabled" : "")>
                                            + Add @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])
                                        </button>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="box-header delete-item hide">
                            <div class="left-item">
                                <div class="static-text">
                                    <span>1 item(s) selected</span>
                                </div>
                                <div class="option">
                                    <button class="btn btn-delete btn-round" type="button" data-toggle="modal" data-target="#confirm-delete">
                                        Delete
                                    </button>
                                </div>
                                <div class="option">
                                    <button class="btn btn-link btn-link-secondary" type="button">
                                        Cancel
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="outer-table-wrapper">
                        <table id="x-table-data" class="table table-striped display nowrap" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.RowNumber)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.purpose)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.description)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.display_flag)</th>
                                    <th class="action" style="text-align:center;">
                                        <i class="feather-icon icon-settings" style="font-size: large;"></i>
                                    </th>
                                </tr>
                            </thead>

                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>

<!-- Add Form Right Modal -->
<div class="modal right fade" id="action-form-modal" tabindex="-1" role="dialog" aria-labelledby="edit-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">
                        <i class="feather-icon icon-x"></i>
                    </span>
                </button>
                <h4 class="modal-title" id="modalTitle"></h4>
            </div>
            <div class="modal-body group">
                @using (Html.BeginForm("Create", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { @class = "one-col-form", id = "action-form" }))
                {

                    <div class="form-container form-horizontal">
                        <div class="row">
                            <div class="col-xs-12 form-wrapper-max">
                                <div class="form-group">
                                    @Html.LabelForRequired(mode => Model.FormAction.purpose, htmlAttributes: new { @class = "control-label col-xs-3" })
                                    <div class="col-xs-9">
                                        @Html.EditorFor(model => model.FormAction.purpose, new { htmlAttributes = new { @maxlength = 250, @class = "form-control" } })
                                        <span id="purpose_error" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelForRequired(mode => Model.FormAction.description, htmlAttributes: new { @class = "control-label col-xs-3" })
                                    <div class="col-xs-9">
                                        @Html.TextAreaFor(model => model.FormAction.description, htmlAttributes: new { @class = "form-control" })
                                        <span id="description_error" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FormAction.display_flag, htmlAttributes: new { @class = "control-label col-xs-3" })
                                    <div class="col-xs-6">
                                        <div class="radio-form">
                                            <div class="radio">
                                                <label class="radio-inline c-radio">
                                                    @Html.RadioButtonFor(model => model.FormAction.display_flag, "1", htmlAttributes: new { @checked = "checked" }) Yes
                                                </label>
                                                <label class="radio-inline c-radio">
                                                    @Html.RadioButtonFor(model => model.FormAction.display_flag, "0") No
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-12">
                            <hr>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-12">
                            <button type="button" id="btnSave" class="btn btn-primary btn-round btn-main btn-form-save">+ Add Purpose</button>
                            <button type="button" id="btnCancel" class="btn btn-default btn-round btn-main" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                }

            </div>
        </div>
        <!-- modal-content -->
    </div>
    <!-- modal-dialog -->
</div>


@section Styles {
    @Styles.Render("~/content/datatable")
    @Styles.Render("~/bundles/SweetAlertCss")
    <style>
        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
        }

        .dataTables_filter {
            display: none;
        }

        .dataTables_processing {
            z-index: 3000;
            padding-top: 10px !important;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/SweetAlert")
    <script src="~/Scripts/GM.PurposeIndex.js"></script>
    <script>
        $(document).ready(function () {
            var settings = {
                isUpdate: "@IsUpdate",
                isDelete: "@IsDelete",
                urlIndex: "@Url.Action("Search", (string)this.ViewContext.RouteData.Values["controller"])",
                urlGetEdit: "@Url.Action("GetEdit", (string)this.ViewContext.RouteData.Values["controller"])",
                urlCreate: "@Url.Action("Create", (string)this.ViewContext.RouteData.Values["controller"])",
                urlEdit: "@Url.Action("Edit", (string)this.ViewContext.RouteData.Values["controller"])",
                urlDelete: "@Url.Action("Delete", (string)this.ViewContext.RouteData.Values["controller"])"
            };
            PurposeIndex.init(settings);
        });
    </script>

}
