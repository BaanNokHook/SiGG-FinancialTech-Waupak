@model GM.Data.View.Static.SWIFTViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}


<section class="working-content">
    <div class="container-fluid container-fixed">
        <!-- PageTitle -->
        <div class="row row-fixed">
            <div class="col-lg-12 col-fixed">
                <div class="page-title">
                    <div class="breadcrumb-wrap">
                        <ol class="breadcrumb">
                            <li>
                                <a href="..\Home\Index">Home</a>
                            </li>
                            <li class="active">Admin</li>
                            <li class="active">SWIFT SFTP</li>
                        </ol>
                    </div>
                    <div class="title">
                        <h1>
                            SWIFT SFTP
                        </h1>
                    </div>
                </div>
            </div>
        </div>

        <!-- Div Content -->
        <div class="row row-fixed">
            <div class="col-xs-12 col-fixed">
                <div id="alert-msg"></div>

                <!-- Div Search -->
                <div class="box-content" id="search-form-modal">
                    <div class="box-header">
                        <div class="left-item">
                            <div class="title">
                                <h3>Test @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])</h3>
                            </div>
                        </div>
                        <div class="right-item">
                        </div>
                    </div>
                    @using (Html.BeginForm("Index", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { @class = "one-col-form", id = "SWIFT-form", enctype = "multipart/form-data" }))
                    {
                        <div class="form-container form-horizontal">
                            <div class="row">
                                <div class="col-xs-12 form-wrapper-1100">
                                    <div class="form-group">
                                        @Html.LabelForRequired(model => model.active_path, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-xs-4">
                                            <div class="dropdown">
                                                <button class="btn btn-default dropdown-toggle" id="ddl_active_path" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                    @Html.SpanFor(model => model.active_path, "Select...", new { @class = "selected-data" })
                                                    @Html.Hidden("ActivePath", null, new { @class = "selected-value" })
                                                    @Html.Hidden("ActivePath", null, new { @class = "selected-data" })
                                                    <span class="caret"></span>
                                                </button>
                                                <div class="dropdown-menu">
                                                    <input type="hidden" id="active_path">
                                                    <ul id="ul_active_path">
                                                        <li class="searchterm">
                                                            <a onclick='ClearDDL("ActivePath", "Select...")'>Select...</a>
                                                        </li>
                                                        <li class="searchterm">
                                                            <a data-toggle="tooltip" title="REPO OUT & BACK OUT" onclick='AddTextForDDL("REPO OUT & BACK OUT", "ActivePath", "double", "null", "null")'>REPO OUT & BACK OUT</a>
                                                        </li>
                                                        <li class="searchterm">
                                                            <a data-toggle="tooltip" title="REPO OUT" onclick='AddTextForDDL("REPO OUT", "ActivePath", "repo_out", "null", "null")'>REPO OUT</a>
                                                        </li>
                                                        <li class="searchterm">
                                                            <a data-toggle="tooltip" title="REPO BACK OUT" onclick='AddTextForDDL("REPO BACK OUT", "ActivePath", "repo_backout", "null", "null")'>REPO BACK OUT</a>
                                                        </li>
                                                    </ul>
                                                </div>
                                                <span id="active_path_error" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                            </div>
                                        </div>
                                        <div class="col-xs-6">
                                            <div class="form-group">
                                                @Html.LabelForRequired(model => model.file_name, htmlAttributes: new { @class = "control-label col-xs-4 col-md-5 col-lg-4" })
                                                <div class="col-xs-5 col-md-7 col-lg-8">
                                                    <div class="input-group" style="width: 100%;max-width: 250px;">
                                                        @Html.EditorFor(model => model.file_name, new { htmlAttributes = new { @class = "form-control" } })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <hr>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <button class="btn btn-primary btn-round btn-main" type="button" id="btnSftp">SFTP File</button>
                                    <button class="btn btn-primary btn-round btn-main" type="button" id="btnback">Back</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Div Detail -->
                <div class="box-content table-content">
                    <div class="group box-header-wrapper">
                        <div class="box-header">
                            <div class="left-item">
                                <div class="title">
                                    <h3>Details</h3>
                                </div>
                            </div>
                            <div class="right-item">
                                <div class="add-data">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="outer-responsive-fixed">
                        <div class="row">
                            <div class="col-xs-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.config_swift, htmlAttributes: new { @class = "control-label col-xs-2" })
                                    @Html.TextAreaFor(model => model.config_swift, new { @class = "form-control", rows = "12" })
                                </div>
                            </div>
                            <div class="col-xs-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.result, htmlAttributes: new { @class = "control-label col-xs-2" })
                                    @Html.TextAreaFor(model => model.result, new { @class = "form-control", rows = "12" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>

@section Styles {
    @Styles.Render("~/content/datatable")
    @Styles.Render("~/bundles/SweetAlertCss")
    <style>
        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
        }

        .dataTables_filter {
            display: none;
        }

        .dataTables_processing {
            z-index: 3000;
            padding-top: 10px !important;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/SweetAlert")
    <script src="~/Scripts/GM.SWIFT.js"></script>
    <script>
        $(document).ready(function () {

            var urlIndex = "@Url.Action("Index", (string)this.ViewContext.RouteData.Values["controller"])";
            SWIFT.init(urlIndex);
        });
    </script>
}