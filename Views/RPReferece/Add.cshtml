@model GM.Data.Model.MarketRate.RPRefereceModel
@{
    ViewBag.Title = "Add";

    Layout = "~/Views/Shared/MainLayout.cshtml";
    bool isUpdate = IsUpdate;

    var ErrorMessage = ViewBag.Message;
}
@using (Html.BeginForm(new { id = "add-form" }))
{
    <section class="working-content two-nav-padding" data-spy="scroll" data-target="#counterparty-scrollspy" data-offset="200">
        <div class="container-fluid container-fixed">

            <!--Second Navbar-->
            <nav id="counterparty-scrollspy" class="navbar navbar-defult top-navbar section-nav-wrapper">
                <div class="navbar-wrapper sub-topnav section-nav">
                    <ul class="nav navbar-nav">
                        <li class="active" id="detail-li">
                            <a href="#security-detail" onclick="expandpanel('detail')">Detail</a>
                        </li>
                        <li>
                            <div class="vertical-line"></div>
                        </li>
                        <li class="submit-nav">
                            @if (Model.page_name == "addpage")
                            {
                                <button type="submit" class="btn btn-link">Submit</button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-link" @(!isUpdate ? "disabled" : "")>Submit</button>
                            }

                            <button type="button" class="btn btn-link" onclick="location.href='@Url.Action("Index", "RPReferece")'">Back</button>
                        </li>
                    </ul>
                </div>
            </nav>

            <!-- PageTitle -->
            <div class="row row-fixed">
                <div class="col-lg-12 col-fixed">
                    <div class="page-title">
                        <div class="breadcrumb-wrap">
                            <ol class="breadcrumb" id="NavBar">
                                @*<li>
                                        <a href="..\Home\Index">Home</a>
                                    </li>
                                    <li class="active">Market Process</li>
                                    <li class="active">Market Rate</li>
                                    <li class="active">RP Reference</li>*@
                            </ol>
                        </div>
                        <div class="title">
                            <h1>
                                RP Reference
                            </h1>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Content Zone -->
            <div class="row row-fixed">
                <div class="col-xs-12 col-fixed">

                    <!-- RPReference Detail -->
                    <div id="security-detail" class="box-content no-padding">
                        <div id="security-detail-icon" class="box-header big-head expand-able" aria-expanded="true" data-toggle="collapse" data-target="#security-detail-form">
                            <div class="left-item">
                                <div class="title">
                                    <i class="feather-icon icon-minus"></i><h3>RPReference Detail</h3>
                                </div>
                            </div>
                        </div>
                        <div id="security-detail-form" class="form-container form-horizontal have-head collapse in">
                            <div class="form-container form-horizontal">
                                <div class="row">

                                    <div class="col-xs-12 form-wrapper-1100">
                                        <div class="form-group-wrapper">
                                            @Html.HiddenFor(model => model.page_name)
                                            <input id="hdd_page_name" type="hidden" name="hdd_page_name" value="@ViewBag.page_name">


                                            <div class="form-group">
                                                @Html.LabelForRequired(model => model.price_source, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    <div class="dropdown">
                                                        <button class="btn btn-default dropdown-toggle" style="min-width:150px;" id="ddl_rp_source" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                            @Html.SpanFor(model => model.price_source, "Select...", new { @class = "selected-data" })
                                                            @Html.TextBoxFor(model => model.price_source, htmlAttributes: new { @class = "selected-value hidden" })
                                                            @Html.TextBoxFor(model => model.price_source, htmlAttributes: new { @class = "selected-data hidden" })
                                                            <span class="caret"></span>
                                                        </button>
                                                        <div class="dropdown-menu">
                                                            <div class="search-dropdown-menu">
                                                                <input type="text" data-action="@Url.Action("GetDDLPriceSource", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_rp_source" class="form-control hidden" placeholder="Search..." aria-describedby="basic-addon1">
                                                            </div>
                                                            <ul id="ul_rp_source"></ul>
                                                        </div>
                                                        <span data-valmsg-for="price_source" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelForRequired(model => model.asof_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    <div class="input-group date">
                                                        @Html.EditDateFor(model => model.asof_date, new { id = "txt_asof_date", @class = "form-control date-time-picker-weekend" })
                                                        <span class="input-group-addon">
                                                            <span class="feather-icon icon-calendar-weekend"></span>
                                                        </span>
                                                    </div>
                                                    <span data-valmsg-for="asof_date" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelForRequired(model => model.instrument_code, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    <div class="dropdown">
                                                        <button class="btn btn-default dropdown-toggle" style="min-width:150px;" id="ddl_instrument_code" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                            @Html.SpanFor(model => model.instrument_code, "Select...", new { @class = "selected-data" })
                                                            @Html.TextBoxFor(model => model.instrument_id, htmlAttributes: new { @class = "selected-value hidden" })
                                                            @Html.TextBoxFor(model => model.instrument_code, htmlAttributes: new { @class = "selected-data hidden" })
                                                            <span class="caret"></span>
                                                        </button>
                                                        <div class="dropdown-menu">
                                                            <div class="search-dropdown-menu">
                                                                <input type="text" data-action="@Url.Action("FillInstrumentCode", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_instrument_code" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                                <i class="feather-icon icon-search"></i>
                                                            </div>
                                                            <hr>
                                                            <ul id="ul_instrument_code"></ul>
                                                        </div>
                                                        <span data-valmsg-for="instrument_id" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelForRequired(model => model.marketdate_t, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    <div class="dropdown">
                                                        <button class="btn btn-default dropdown-toggle" style="min-width:150px;" id="ddl_marketdate_t" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                            @Html.SpanFor(model => model.marketdate_t, "Select...", new { @class = "selected-data" })
                                                            @Html.TextBoxFor(model => model.marketdate_t, htmlAttributes: new { @class = "selected-value hidden" })
                                                            @Html.TextBoxFor(model => model.marketdate_t, htmlAttributes: new { @class = "selected-data hidden" })
                                                            <span class="caret"></span>
                                                        </button>
                                                        <div class="dropdown-menu">
                                                            <div class="search-dropdown-menu">
                                                                <input type="text" id="txt_marketdate_t" class="form-control hidden" placeholder="Search..." aria-describedby="basic-addon1">
                                                            </div>
                                                            <ul id="ul_marketdate_t">
                                                                <li class="searchterm"><a onclick="ClearDDL('txt_marketdate_t')">Select...</a></li>
                                                                <li class="searchterm"><a data-toggle="tooltip" title="0" onclick="AddTextForDDL('0','txt_marketdate_t','0','null','null')">0</a></li>
                                                                <li class="searchterm"><a data-toggle="tooltip" title="1" onclick="AddTextForDDL('1','txt_marketdate_t','1','null','null')">1</a></li>
                                                                <li class="searchterm"><a data-toggle="tooltip" title="2" onclick="AddTextForDDL('2','txt_marketdate_t','2','null','null')">2</a></li>
                                                            </ul>
                                                        </div>
                                                        <span data-valmsg-for="marketdate_t" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ai, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.ai, new { htmlAttributes = new { @class = "form-control input-decimal" } })
                                                    <span data-valmsg-for="ai" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.gross_price, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.gross_price, new { htmlAttributes = new { @class = "form-control" } })
                                                    <span data-valmsg-for="gross_price" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.clean_price, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.clean_price, new { htmlAttributes = new { @class = "form-control" } })
                                                    <span data-valmsg-for="clean_price" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.modifiedduration, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.modifiedduration, new { htmlAttributes = new { @class = "form-control" } })
                                                    <span data-valmsg-for="modifiedduration" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.convexity, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.convexity, new { htmlAttributes = new { @class = "form-control" } })
                                                    <span data-valmsg-for="convexity" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                                </div>
                                            </div>

                                            <div id="panel-BBG" style="display: none;">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.maturity_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-xs-4">
                                                        <div class="input-group date">
                                                            @Html.EditDateFor(model => model.maturity_date, new { @class = "form-control date-time-picker-weekend" })
                                                            <span class="input-group-addon">
                                                                <span class="feather-icon icon-calendar-weekend"></span>
                                                            </span>
                                                        </div>
                                                        @Html.ValidationMessageFor(model => model.maturity_date, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.avgbidding, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-xs-4">
                                                        @Html.EditorFor(model => model.avgbidding, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.avgbidding, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.govtinterpolatedyield, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-xs-4">
                                                        @Html.EditorFor(model => model.govtinterpolatedyield, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.govtinterpolatedyield, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ttm, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-xs-4">
                                                        @Html.EditorFor(model => model.ttm, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.ttm, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.spread, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-xs-4">
                                                        @Html.EditorFor(model => model.spread, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.spread, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.referenceyield, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-xs-4">
                                                        @Html.EditorFor(model => model.referenceyield, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.referenceyield, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.settlementdate, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-xs-4">
                                                        <div class="input-group date">
                                                            @Html.EditDateFor(model => model.settlementdate, new { @class = "form-control date-time-picker-weekend" })
                                                            <span class="input-group-addon">
                                                                <span class="feather-icon icon-calendar-weekend"></span>
                                                            </span>
                                                        </div>
                                                        @Html.ValidationMessageFor(model => model.settlementdate, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.bondtype, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-xs-4">
                                                        @Html.EditorFor(model => model.bondtype, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.bondtype, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>


                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div id="security-submit" class="page-button-submit">
                                @if (Model.page_name == "addpage")
                                {
                                    <button type="submit" class="btn btn-primary btn-round btn-big">Submit</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-primary btn-round btn-big" @(!isUpdate ? "disabled" : "")>Submit</button>
                                }
                                <button type="reset" class="btn btn-link">Clear Data</button>
                                @*<a class="btn btn-link" onClick="window.location.reload(true)">Clear Data</a>*@
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </section>
}

@section Styles {
    @Styles.Render("~/bundles/SweetAlertCss")
    @Styles.Render("~/content/datatable")
    <style>
        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
        }

        .dataTables_filter {
            display: none;
        }

        .dataTables_processing {
            z-index: 3000;
            padding-top: 10px !important;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/SweetAlert")

    <script>
        window.onload = function () {
          var ErrorMessage = "@ErrorMessage";
             if (ErrorMessage != "")
             {
                 swal("Error", ErrorMessage, "error");
                 ErrorMessage = "";
            }
        };

        $(document).ready(function () {

            $("#NavBar").html($('#NavRPReferece').val());

            var isUpdate = "@isUpdate";

            //Enable or Disable Control
            var page_name = $('#hdd_page_name').val();
            if (page_name == 'editpage') {
                $('#ddl_rp_source').attr('disabled', 'disabled');
                $('#txt_asof_date').attr('readonly', 'readonly');
                $('#ddl_instrument_code').attr('disabled', 'disabled');
                $('#ddl_marketdate_t').attr('disabled', 'disabled');

                if (isUpdate == "False") {
                    $('#maturity_date').attr('disabled', 'disabled');
                    $('#avgbidding').attr('disabled', 'disabled');
                    $('#govtinterpolatedyield').attr('disabled', 'disabled');
                    $('#ttm').attr('disabled', 'disabled');
                    $('#spread').attr('disabled', 'disabled');
                    $('#referenceyield').attr('disabled', 'disabled');
                    $('#settlementdate').attr('disabled', 'disabled');
                    $('#ai').attr('disabled', 'disabled');
                    $('#gross_price').attr('disabled', 'disabled');
                    $('#clean_price').attr('disabled', 'disabled');
                    $('#modifiedduration').attr('disabled', 'disabled');
                    $('#convexity').attr('disabled', 'disabled');
                    $('#processdate').attr('disabled', 'disabled');
                    $('#bondtype').attr('disabled', 'disabled');
                }
            }
            else {
                $('#ddl_rp_source').removeAttr('disabled', 'disabled');
                $('#txt_asof_date').removeAttr('disabled', 'disabled');
                $('#ddl_instrument_code').removeAttr('disabled', 'disabled');
                $('#ddl_marketdate_t').removeAttr('disabled', 'disabled');
            }
            //End Enable or Disable Control

            var input = $('.input-validation-error:first');
            if (input) {
                input.focus();
            }
        });

    </script>
    @*@Scripts.Render("~/module/rpreferece")*@
    @Scripts.Render("~/module/validation")
    @Scripts.RenderFormat("<script type=\"text/javascript\" src=\"{0}?nocache=" + DateTime.Now.ToString("ddmmyyyyHHmmss") + "\"></script>", "~/module/rpreferece")
}