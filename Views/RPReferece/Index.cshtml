@model GM.Data.View.MarketRate.RPRefereceViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

<section class="working-content">
    <div class="container-fluid container-fixed">
        <!-- PageTitle -->
        <div class="row row-fixed">
            <div class="col-lg-12 col-fixed">
                <div class="page-title">
                    <div class="breadcrumb-wrap">
                        <ol class="breadcrumb" id="NavBar">
                            @*<li>
                                    <a href="..\Home\Index">Home</a>
                                </li>
                                <li class="active">Market Process</li>
                                <li class="active">Market Rate</li>
                                <li class="active">RP Reference</li>*@
                        </ol>
                    </div>
                    <div class="title">
                        <h1>
                            RP Reference
                        </h1>
                    </div>
                </div>
            </div>
        </div>
        <!-- Content Zone -->
        <div class="row row-fixed">
            <div class="col-xs-12 col-fixed">
                <!-- Search Zone -->
                <div class="box-content" id="search-form-modal">
                    <div class="box-header">
                        <div class="left-item">
                            <div class="title">
                                <h3>Search RP Reference</h3>
                            </div>
                        </div>
                        <div class="right-item">
                            @*<button id="user-master" class="btn btn-link less-more-option">
                                    Show more option
                                    <i class="feather-icon icon-chevron-down"></i>
                                </button>*@
                        </div>
                    </div>
                    @using (Html.BeginForm("Search", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { @class = "one-col-form", id = "search-form" }))
                    {
                        <div class="form-container form-horizontal">
                            <div class="row">
                                <div class="col-xs-12 form-wrapper-1100">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FormSearch.instrument_code, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            @Html.EditorFor(model => model.FormSearch.instrument_code, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                        @Html.LabelFor(model => model.FormSearch.asof_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-xs-4">
                                            <div class="input-group date">
                                                @Html.EditDateFor(model => model.FormSearch.asof_date, new { @class = "form-control date-time-picker-weekend" })
                                                <span class="input-group-addon">
                                                    <span class="feather-icon icon-calendar-weekend"></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FormSearch.price_source, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            <div class="dropdown">
                                                <button class="btn btn-default dropdown-toggle" style="min-width:150px;" id="ddl_rp_source" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                    @Html.SpanFor(model => model.FormSearch.price_source, "Select...", new { @class = "selected-data" })
                                                    @Html.TextBoxFor(model => model.FormSearch.price_source, htmlAttributes: new { @class = "selected-value hidden" })
                                                    @Html.TextBoxFor(model => model.FormSearch.price_source, htmlAttributes: new { @class = "selected-data hidden" })
                                                    <span class="caret"></span>
                                                </button>
                                                <div class="dropdown-menu">
                                                    <div class="search-dropdown-menu">
                                                        <input type="text" data-action="@Url.Action("GetDDLPriceSource", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_rp_source" class="form-control hidden" placeholder="Search..." aria-describedby="basic-addon1">
                                                    </div>
                                                    <ul id="ul_rp_source"></ul>
                                                </div>
                                                <span data-valmsg-for="price_source" class="field-validation-error text-danger" data-valmsg-replace="true"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="advance-form" style="display: none;">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <hr>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <button class="btn btn-primary btn-round btn-main btn-search" type="submit">Confirm</button>
                                    <button class="btn btn-link btn-link-secondary" type="reset">Clear Data</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Div Detail -->
                <div class="box-content table-content">
                    <div class="group box-header-wrapper">
                        <div class="box-header">
                            <div class="left-item">
                                <div class="title">
                                    <h3>Details</h3>
                                </div>
                            </div>
                            <div class="right-item">
                                <div class="add-data">
                                    <div class="dropdown">
                                        <button class="btn btn-primary btn-round dropdown-toggle" type="button" id="btnExcel" form-mode="GenExcel" onclick="GM.RPReferece.Form.GenExcel(this)">
                                            Export Excel RP Reference
                                        </button>
                                        <button class="btn btn-primary btn-round dropdown-toggle" type="button" id="btnAdd" onclick="location.href = '/RPReferece/Add';return false;" @(!IsCreate ? "disabled" : "")>
                                            + Add RP Reference
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="outer-table-wrapper">
                        <table id="x-table-data" class="table table-striped display nowrap" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>@Html.LabelFor(mode => mode.FormTable.RowNumber)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.price_source)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.instrument_id)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.asof_date)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.instrument_code)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.bondtype)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.marketdate_t)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.maturity_date)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.settlementdate)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.processdate)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.ai)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.clean_price)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.gross_price)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.avgbidding)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.ttm)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.govtinterpolatedyield)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.spreadquoteddate)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.spread)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.referenceyield)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.modifiedduration)</th>
                                    <th>@Html.LabelFor(mode => mode.FormTable.convexity)</th>
                                    <th class="action" style="text-align:center;">
                                        <i class="feather-icon icon-settings" style="font-size: large;"></i>
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("GenExcel", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { id = "download-form" }))
{
    <input type="hidden" id="FormDownload_instrument_code" name="instrument_code" />
    <input type="hidden" id="FormDownload_asof_date" name="asof_date" />
}

@section Styles {
    @Styles.Render("~/bundles/SweetAlertCss")
    @Styles.Render("~/content/datatable")
    <style>
        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
        }

        .dataTables_filter {
            display: none;
        }

        .dataTables_processing {
            z-index: 3000;
            padding-top: 10px !important;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/SweetAlert")

    <script>

        function Delete(price_source, asof_date, instrument_id, marketdate_t) {
            swal({
                title: "Are you sure?",
                text: "",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes",
                cancelButtonText: "No",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        var data = { price_source: price_source, asof_date: asof_date, instrument_id: instrument_id, marketdate_t: marketdate_t };
                        //console.log("Show form delete -> local");
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("Deletes", (string)this.ViewContext.RouteData.Values["controller"])",
                            content: "application/json; charset=utf-8",
                            dataType: "json",
                            data: data,
                            success: function (d) {
                                if (d.success) {
                                    setTimeout(function () {
                                        swal("Deleted!", "Delete Success.", "success");
                                    }, 100);
                                   $('#action-form-modal').modal('hide');
                                    GM.Message.Clear();
                                    GM.RPReferece.Form.Search();
                                    GM.RPReferece.Table.draw();
                                } else {
                                    // DoSomethingElse()
                                    swal("Deleted!", "Error : " + d.responseText, "error");
                                }
                            },
                            error: function (d) {
                                // TODO: Show error
                                GM.Message.Clear();
                            }
                        });
                    } else {
                        GM.Message.Clear();
                        swal("Cancelled", "Your Data not Delete", "error");
                    }
                }
        );
    }

        $(document).ready(function () {
            $("#NavBar").html($('#NavRPReferece').val());
        });
    </script>
    @Scripts.Render("~/module/rpreferece")
}
