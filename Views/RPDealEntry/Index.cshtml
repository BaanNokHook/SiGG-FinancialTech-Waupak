@model GM.Data.View.RPTransaction.RPDealEntryViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

<section class="working-content">
    <div class="container-fluid container-fixed">
        <!-- PageTitle -->
        <div class="row row-fixed">
            <div class="col-lg-12 col-fixed">
                <div class="page-title">
                    <div class="breadcrumb-wrap">
                        <ol class="breadcrumb" id="NavBar"></ol>
                    </div>
                    <div class="title">
                        <h1>
                            Deal Entry
                        </h1>
                    </div>
                </div>
            </div>
        </div>
        <!-- Content Zone -->
        <div class="row row-fixed">
            <div class="col-xs-12 col-fixed">
                <!-- Search Zone -->
                <div class="box-content" id="search-form-modal">
                    <div class="box-header">
                        <div class="left-item">
                            <div class="title">
                                <h3>SEARCH DEAL ENTRY</h3>
                            </div>
                        </div>
                        <div class="right-item">
                            <button id="user-master" class="btn btn-link less-more-option">
                                Show more option
                                <i class="feather-icon icon-chevron-down"></i>
                            </button>
                        </div>
                    </div>
                    @using (Html.BeginForm("Search", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { @class = "one-col-form", id = "search-form" }))
                    {
                        <div class="form-container form-horizontal">
                            <div class="row">
                                <div class="col-xs-12 form-wrapper-1100">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FormSearch.from_trans_no, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            @Html.EditorFor(model => model.FormSearch.from_trans_no, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                        @Html.LabelFor(model => model.FormSearch.to_trans_no, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-xs-4">
                                            @Html.EditorFor(model => model.FormSearch.to_trans_no, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="advance-form" style="display: none;">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FormSearch.from_trade_date, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                <div class="input-group date">
                                                    @Html.EditDateFor(model => model.FormSearch.from_trade_date, new { @class = "form-control date-time-picker-weekend" })
                                                    <span class="input-group-addon">
                                                        <span class="feather-icon icon-calendar-weekend"></span>
                                                    </span>
                                                </div>
                                            </div>
                                            @Html.LabelFor(model => model.FormSearch.to_trade_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-xs-4">
                                                <div class="input-group date">
                                                    @Html.EditDateFor(model => model.FormSearch.to_trade_date, new { @class = "form-control date-time-picker-weekend" })
                                                    <span class="input-group-addon">
                                                        <span class="feather-icon icon-calendar-weekend"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FormSearch.from_settlement_date, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                <div class="input-group date">
                                                    @Html.EditDateFor(model => model.FormSearch.from_settlement_date, new { @class = "form-control date-time-picker-weekend" })
                                                    <span class="input-group-addon">
                                                        <span class="feather-icon icon-calendar-weekend"></span>
                                                    </span>
                                                </div>
                                            </div>
                                            @Html.LabelFor(model => model.FormSearch.to_settlement_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-xs-4">
                                                <div class="input-group date">
                                                    @Html.EditDateFor(model => model.FormSearch.to_settlement_date, new { @class = "form-control date-time-picker-weekend" })
                                                    <span class="input-group-addon">
                                                        <span class="feather-icon icon-calendar-weekend"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(mode => Model.FormSearch.from_maturity_date, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                <div class="input-group date">
                                                    @Html.EditDateFor(model => model.FormSearch.from_maturity_date, new { @class = "form-control date-time-picker-weekend" })
                                                    <span class="input-group-addon">
                                                        <span class="feather-icon icon-calendar-weekend"></span>
                                                    </span>
                                                </div>
                                            </div>
                                            @Html.LabelFor(mode => Model.FormSearch.to_maturity_date, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                <div class="input-group date">
                                                    @Html.EditDateFor(model => model.FormSearch.to_maturity_date, new { @class = "form-control date-time-picker-weekend" })
                                                    <span class="input-group-addon">
                                                        <span class="feather-icon icon-calendar-weekend"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(mode => Model.FormSearch.repo_deal_type, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                <div class="dropdown">
                                                    <button class="btn btn-default dropdown-toggle" id="ddl_repo_deal_type" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                        @Html.SpanFor(model => model.FormSearch.repo_deal_type, "Select...", new { @class = "selected-data" })
                                                        @Html.Hidden("FormSearch.repo_deal_type_code", null, new { @class = "selected-value" })
                                                        @Html.TextBoxFor(model => model.FormSearch.repo_deal_type, htmlAttributes: new { @class = "selected-data hidden" })
                                                        <span class="caret"></span>
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        <input type="hidden" id="txt_repo_deal_type">
                                                        <ul id="ul_repo_deal_type">
                                                            <li class="searchterm">
                                                                <a onclick='ClearDDL("txt_repo_deal_type", "Select...")'>Select...</a>
                                                            </li>
                                                            <li class="searchterm">
                                                                <a data-toggle="tooltip" title="Private Repo" onclick='AddTextForDDL4Value("Private Repo", "txt_repo_deal_type", "PRP","null","null","null","null","null","null")'>Private Repo</a>
                                                            </li>
                                                            <li class="searchterm">
                                                                <a data-toggle="tooltip" title="Bilateral Repo" onclick='AddTextForDDL4Value("Bilateral Repo", "txt_repo_deal_type", "BRP","null","null","null","null","null","null")'>Bilateral Repo</a>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                            @Html.LabelFor(mode => Model.FormSearch.counter_party_code, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                <div class="dropdown">
                                                    <button class="btn btn-default dropdown-toggle" id="ddl_counterparty" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                        @Html.SpanFor(model => model.FormSearch.counter_party_name, "Select...", new { @class = "selected-data" })
                                                        @Html.TextBoxFor(model => model.FormSearch.counter_party_code, htmlAttributes: new { @class = "selected-value hidden" })
                                                        @Html.TextBoxFor(model => model.FormSearch.counter_party_name, htmlAttributes: new { @class = "selected-data hidden" })
                                                        <span class="caret"></span>
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        <div class="search-dropdown-menu">
                                                            <input type="text" data-action="@Url.Action("FillCounterparty", "CounterPartyFund")" id="txt_counterparty" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                            <i class="feather-icon icon-search"></i>
                                                        </div>
                                                        <hr>
                                                        <ul id="ul_counterparty"></ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FormSearch.trans_deal_type, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                <div class="dropdown">
                                                    <button class="btn btn-default dropdown-toggle" id="ddl_trans_deal_type" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                        @Html.SpanFor(model => model.FormSearch.trans_deal_type_name, "Select...", new { @class = "selected-data" })
                                                        @Html.TextBoxFor(model => model.FormSearch.trans_deal_type, htmlAttributes: new { @class = "selected-value hidden" })
                                                        @Html.TextBoxFor(model => model.FormSearch.trans_deal_type_name, htmlAttributes: new { @class = "selected-data hidden" })
                                                        <span class="caret"></span>
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        <div class="search-dropdown-menu">
                                                            <input type="text" data-action="@Url.Action("FillInstrument", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_trans_deal_type" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                            <i class="feather-icon icon-search"></i>
                                                        </div>
                                                        <hr>
                                                        <ul id="ul_trans_deal_type"></ul>
                                                    </div>
                                                </div>
                                            </div>
                                            @Html.LabelFor(model => model.FormSearch.trans_type, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                <div class="dropdown">
                                                    <button class="btn btn-default dropdown-toggle" id="ddl_trans_type" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                        @Html.SpanFor(model => model.FormSearch.trans_type_name, "Select...", new { @class = "selected-data" })
                                                        @Html.TextBoxFor(model => model.FormSearch.trans_type, htmlAttributes: new { @class = "selected-value hidden" })
                                                        @Html.TextBoxFor(model => model.FormSearch.trans_type_name, htmlAttributes: new { @class = "selected-data hidden" })
                                                        <span class="caret"></span>
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        <div class="search-dropdown-menu">
                                                            <input type="text" data-action="@Url.Action("FillTransType", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_trans_type" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                            <i class="feather-icon icon-search"></i>
                                                        </div>
                                                        <hr>
                                                        <ul id="ul_trans_type"></ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(mode => Model.FormSearch.port, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                <div class="dropdown">
                                                    <button class="btn btn-default dropdown-toggle" id="ddl_port" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                        @Html.SpanFor(model => model.FormSearch.port_name, "Select...", new { @class = "selected-data" })
                                                        @Html.TextBoxFor(model => model.FormSearch.port, htmlAttributes: new { @class = "selected-value hidden" })
                                                        @Html.TextBoxFor(model => model.FormSearch.port_name, htmlAttributes: new { @class = "selected-data hidden" })
                                                        <span class="caret"></span>
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        <div class="search-dropdown-menu">
                                                            <input type="text" data-action="@Url.Action("FillPortUser", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_port" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                            <i class="feather-icon icon-search"></i>
                                                        </div>
                                                        <hr>
                                                        <ul id="ul_port"></ul>
                                                    </div>
                                                </div>
                                            </div>
                                            @Html.LabelFor(mode => Model.FormSearch.purpose, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                <div class="dropdown">
                                                    <button class="btn btn-default dropdown-toggle" id="ddl_purpose" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                        @Html.SpanFor(model => model.FormSearch.purpose_name, "Select...", new { @class = "selected-data" })
                                                        @Html.TextBoxFor(model => model.FormSearch.purpose, htmlAttributes: new { @class = "selected-value hidden" })
                                                        @Html.TextBoxFor(model => model.FormSearch.purpose_name, htmlAttributes: new { @class = "selected-data hidden" })
                                                        <span class="caret"></span>
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        <div class="search-dropdown-menu">
                                                            <input type="text" data-action="@Url.Action("FillPurpose", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_purpose" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                            <i class="feather-icon icon-search"></i>
                                                        </div>
                                                        <hr>
                                                        <ul id="ul_purpose"></ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(mode => Model.FormSearch.cur, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                <div class="dropdown">
                                                    <button class="btn btn-default dropdown-toggle" id="ddl_cur" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                        @Html.SpanFor(model => model.FormSearch.cur, "Select...", new { @class = "selected-data" })
                                                        @Html.TextBoxFor(model => model.FormSearch.cur, htmlAttributes: new { @class = "selected-value hidden" })
                                                        @Html.TextBoxFor(model => model.FormSearch.cur, htmlAttributes: new { @class = "selected-data hidden" })
                                                        <span class="caret"></span>
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        <div class="search-dropdown-menu">
                                                            <input type="text" data-action="@Url.Action("FillCur", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_cur" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                            <i class="feather-icon icon-search"></i>
                                                        </div>
                                                        <hr>
                                                        <ul id="ul_cur"></ul>
                                                    </div>
                                                </div>
                                            </div>
                                            @Html.LabelFor(model => model.FormSearch.user_id, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                <div class="dropdown">
                                                    <button class="btn btn-default dropdown-toggle" id="ddl_user_id" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                        @Html.SpanFor(model => model.FormSearch.username, "Select...", new { @class = "selected-data" })
                                                        @Html.TextBoxFor(model => model.FormSearch.user_id, htmlAttributes: new { @class = "selected-value hidden" })
                                                        @Html.TextBoxFor(model => model.FormSearch.username, htmlAttributes: new { @class = "selected-data hidden" })
                                                        <span class="caret"></span>
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        <div class="search-dropdown-menu">
                                                            <input type="text" data-action="@Url.Action("FillUserID", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_user_id" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                            <i class="feather-icon icon-search"></i>
                                                        </div>
                                                        <hr>
                                                        <ul id="ul_user_id"></ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <hr>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <button class="btn btn-primary btn-round btn-main btn-search" type="submit">Confirm</button>
                                    <button class="btn btn-link btn-link-secondary" type="reset">Clear Data</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <!-- Div Detail -->
                <div class="box-content table-content">
                    <div class="group box-header-wrapper">
                        <div class="box-header">
                            <div class="left-item">
                                <div class="title">
                                    <h3>Details</h3>
                                </div>
                            </div>
                            <div class="right-item">
                                <div class="add-data">
                                    <!-- <button class="btn btn-primary btn-round" type="button" data-toggle="modal" data-target="#edit-modal">
                                      + Add User
                                    </button> -->
                                    <div class="dropdown">
                                        <button class="btn btn-primary btn-round dropdown-toggle" type="button" id="btnAdd" form-mode="add" onclick="location.href='@Url.Action("Add")';return false;" @(!IsCreate ? "disabled" : "")>
                                            + Add Deal Entry
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="outer-table-wrapper">
                        <table id="x-table-data" class="table table-striped display nowrap" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>@Html.LabelFor(mode => mode.TableList.RowNumber)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trans_no)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.repo_deal_type)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trans_deal_type)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trans_type)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.port)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.purpose)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.counter_party_name)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.counter_party_fund_name)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trade_date)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.settlement_date)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.maturity_date)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.deal_period)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.purchase_price)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.repurchase_price)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.cur)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trans_status)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trans_state)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trader_id)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.isover_limit)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.from_trans_no)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.to_trans_no)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.from_trade_date)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.to_trade_date)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.from_settlement_date)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.to_settlement_date)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.from_maturity_date)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.to_maturity_date)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.user_id)</th>
                                    <th class="action" style="text-align:center;">
                                        <i class="feather-icon icon-settings" style="font-size: large;"></i>
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Styles {
    @Styles.Render("~/bundles/SweetAlertCss")
    @Styles.Render("~/content/datatable")
    <style>
        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
        }

        .dataTables_filter {
            display: none;
        }

        .dataTables_processing {
            z-index: 3000;
            padding-top: 10px !important;
        }

        #search-form .text-box {
            width: 235px !important;
        }

        #search-form .dropdown {
            width: 235px !important;
        }

        .over-limit {
            color: red;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/SweetAlert")

    <script>

        function FormatDecimal(Num, point) {
            var format = Number(parseFloat(Num).toFixed(point)).toLocaleString('en', {
                minimumFractionDigits: point
            });
            return format;
        }

        function Delete(trans_no) {
            swal({
                    title: "Are you sure?",
                    text: "",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Yes",
                    cancelButtonText: "No",
                    closeOnConfirm: false,
                    closeOnCancel: false
                },
                function(isConfirm) {
                    if (isConfirm) {
                        var data = { transno: trans_no };
                        //console.log("Show form delete -> local");
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("Deletes", (string) this.ViewContext.RouteData.Values["controller"])",
                            content: "application/json; charset=utf-8",
                            dataType: "json",
                            data: data,
                            success: function(d) {
                                if (d.success) {
                                    setTimeout(function () {
                                        swal("Deleted!", "Delete Success.", "success");
                                    }, 100);
                                    //$('#action-form-modal').modal('hide');
                                    GM.Message.Clear();
                                    GM.RPDealEntry.Form.Search();
                                    GM.RPDealEntry.Table.draw();
                                } else {
                                    // DoSomethingElse()
                                    swal("Deleted!", "Error : " + d.responseText, "error");
                                }
                            },
                            error: function(d) {
                                // TODO: Show error
                                GM.Message.Clear();
                            }
                        });
                    } else {
                        GM.Message.Clear();
                        swal("Cancelled", "Your Data don't delete", "error");
                    }
                });
        }

        //$(window).load(function() {
        //    GM.RPDealEntry.Form.Search();
        //});

        $(document).ready(function () {

            $("#NavBar").html($('#NavRPDealEntry').val());

            GM.RPDealEntry = {};
            GM.RPDealEntry.Table = $('#x-table-data').DataTable({
                dom: 'Bfrtip',
                select: false,
                searching: true,
                scrollY: '80vh',
                scrollX: true,
                order: [
                    [1, "desc"]
                ],
                buttons: [],
                processing: true,
                serverSide: true,
                ajax: {
                    "url": "@Url.Action("Search", (string) this.ViewContext.RouteData.Values["controller"])",
                    "type": "POST",
                    "error": function (jqXHR, textStatus, errorThrown) {
                        console.log(jqXHR);
                        console.log(textStatus);
                        console.log(errorThrown);
                    }
                },
                columnDefs:
                [
                    { targets: 0, data: "RowNumber", orderable: false },
                    { targets: 1, data: "trans_no" },
                    { targets: 2, data: "repo_deal_type_name" },
                    { targets: 3, data: "trans_deal_type_name" },
                    { targets: 4, data: "trans_type" },
                    { targets: 5, data: "port" },
                    { targets: 6, data: "purpose" },
                    { targets: 7, data: "counter_party_name" },
                    { targets: 8, data: "counter_party_fund_name" },
                    {
                        targets: 9,
                        data: "trade_date",
                        render: function(data, type, row, meta) {
                            if (data != null) {
                                return moment(data).format('DD/MM/YYYY');
                            }
                            return data;
                        }
                    },
                    {
                        targets: 10,
                        data: "settlement_date",
                        render: function(data, type, row, meta) {
                            if (data != null) {
                                return moment(data).format('DD/MM/YYYY');
                            }
                            return data;
                        }
                    },
                    {
                        targets: 11,
                        data: "maturity_date",
                        render: function(data, type, row, meta) {
                            if (data != null) {
                                return moment(data).format('DD/MM/YYYY');
                            }
                            return data;
                        }
                    },
                    { targets: 12, data: "deal_period" },
                        {
                            targets: 13, data: "purchase_price",
                            className: 'dt-body-right',
                            render: function (data, type, row, meta) {
                                var html = '';
                                if (data != null) {
                                    html = FormatDecimal(data, 2);
                                }
                                return html;
                            } },
                        {
                            targets: 14, data: "repurchase_price",
                            className: 'dt-body-right',
                            render: function (data, type, row, meta) {
                                var html = '';
                                if (data != null) {
                                    html = FormatDecimal(data, 2);
                                }
                                return html;
                            } },
                    { targets: 15, data: "cur" },
                    { targets: 16, data: "trans_status" },
                    { targets: 17, data: "trans_state" },
                    { targets: 18, data: "trader_id" },
                    {
                        targets: 19,
                        data: "isover_limit",
                        render: function (data, type, row, meta) {
                            if (data == true) {
                                return "True";
                            } else {
                                return "False";
                            }
                        }
                    },
                    { targets: 20, data: "from_trans_no", visible: false },
                    { targets: 21, data: "to_trans_no", visible: false },
                    { targets: 22, data: "from_trade_date", visible: false },
                    { targets: 23, data: "to_trade_date", visible: false },
                    { targets: 24, data: "from_settlement_date", visible: false },
                    { targets: 25, data: "to_settlement_date", visible: false },
                    { targets: 26, data: "from_maturity_date", visible: false },
                    { targets: 27, data: "to_maturity_date", visible: false },
                    { targets: 28, data: "user_id", visible: false },
                    {
                        targets: 29,
                        data: "trans_no",
                        className: 'dt-body-center',
                        width: 60,
                        orderable: false,
                        render: function(data, type, row, meta) {
                            var html = '';
                            html +=
                                '<button class="btn btn-default btn-round" form-mode="edit"   onclick="location.href=\'@Url.Action("Edit", (string) this.ViewContext.RouteData.Values["controller"])?transno=' +
                                row.trans_no +
                                '\'" ><i class="feather-icon icon-edit"></i></button>';
                            html +=
                                '<button class="btn btn-default btn-round" form-mode="cancel"   onclick="location.href=\'@Url.Action("Select", (string) this.ViewContext.RouteData.Values["controller"])?id=[' +
                                row.trans_no +
                                ']\'" ><i class="feather-icon icon-x-circle"></i></button>';
                            //html += '<button class="btn btn-delete  btn-round" form-mode="delete" key="' + row.trans_no + '" onclick="GM.RPDealEntry.Delete(this)" ><i class="feather-icon icon-trash-2"></i></button>';
                            return html;
                        }
                    }
                ],
                fixedColumns: {
                    leftColumns: 1,
                    rightColumns: 1
                },
                 fnPreDrawCallback: function () {
                    $('#x-table-data').DataTable().columns(28).search($('#FormSearch_user_id').val());
                },
                createdRow: function( row, data, dataIndex){
                    if (data.trans_state == "FO-Create" && data.isover_limit ==  true){
                        $('td', row).css('color', 'red');
                    }
                }
            });

            GM.RPDealEntry.Delete = function(btn) {
                var mode = $(btn).attr("form-mode");
                GM.Message.Clear();
                if (mode) {
                    var key = $(btn).attr("key");
                    switch (mode) {
                    case "delete":
                        Delete(key);
                        break;
                    }
                }
            };
        });
    </script>
    @*@Scripts.Render("~/module/rpdealentryindex")*@
    @Scripts.RenderFormat("<script type=\"text/javascript\" src=\"{0}?nocache=" + DateTime.Now.ToString("ddmmyyyyHHmmss") + "\"></script>", "~/module/rpdealentryindex")
}
