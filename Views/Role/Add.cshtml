@model GM.Data.Model.UserAndScreen.RoleAndScreenModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}
<section class="working-content">
    <div class="container-fluid container-fixed">
        <!-- PageTitle -->
        <div class="row row-fixed">
            <div class="col-lg-12 col-fixed">
                <div class="page-title">
                    <div class="breadcrumb-wrap">
                        <ol class="breadcrumb" id="NavBar">
                            @*<li>
                                    <a href="Home\Index">Home</a>
                                </li>
                                <li class="active">Admin Process</li>
                                <li class="active">Screen</li>
                                <li class="active">Role Set Up Master</li>*@
                        </ol>
                    </div>
                    <div class="title">
                        <h1>
                            Role Set Up Master Detail
                        </h1>
                    </div>
                </div>
            </div>
        </div>

        <!-- Content Zone -->
        <div class="row row-fixed">
            <div class="col-xs-12 col-fixed">

                <!-- Search Zone -->
                <div class="box-content" id="search-form-modal">
                    <div class="box-header">
                        <div class="left-item">
                            <div class="title">
                                <h3>@Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])</h3>
                            </div>
                        </div>
                        <div class="right-item">
                            <button id="user-master" class="btn btn-link less-more-option">
                                Show more option
                                <i class="feather-icon icon-chevron-down"></i>
                            </button>
                        </div>
                    </div>

                    @using (Html.BeginForm("Add", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { @class = "one-col-form", id = "search-form" }))
                    {
                        <div class="form-container form-horizontal">
                            <div class="row">
                                <div class="col-xs-12 form-wrapper-1100">
                                    <div class="form-group">
                                        @*<input id="Txt_role_id" type="hidden" name="role_id" value="@Model.role_id">*@
                                        <input id="Txt_role_id" type="hidden" name="role_id" value=" @ViewBag.role_id">

                                        @Html.LabelFor(model => model.role_name, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            @Html.EditorFor(model => model.role_name, new { @Value = @ViewBag.role_name, htmlAttributes = new { @class = "form-control " } })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @*<div class="row">
                                    <hr>
                                </div>
                                <div class="row">
                                    <div class="col-xs-12">
                                        <button class="btn btn-primary btn-round btn-main btn-search" type="submit">Confirm</button>
                                        <button class="btn btn-link btn-link-secondary" type="reset">Clear Data</button>
                                    </div>
                                </div>*@
                        </div>

                    }

                </div>

                <!-- Data Table(new) -->
                <div class="box-content table-content">
                    <div class="group box-header-wrapper">
                        <div class="box-header">
                            <div class="left-item">
                                <div class="title">
                                    <h3>Details</h3>
                                </div>
                            </div>
                            <div class="right-item">
                                <div class="add-data">
                                    <div class="dropdown">
                                        <button class="btn btn-primary btn-round dropdown-toggle" type="button" id="btnAdd" form-mode="add" @(!IsCreate ? "disabled" : "")>
                                            + Add Screen
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*<div class="box-header delete-item hide">
                                <div class="left-item">
                                    <div class="static-text">
                                        <span>1 item(s) selected</span>
                                    </div>
                                    <div class="option">

                                        <button class="btn btn-delete btn-round" type="button" data-toggle="modal" data-target="#confirm-delete">
                                            Delete
                                        </button>
                                    </div>
                                    <div class="option">
                                        <button class="btn btn-link btn-link-secondary" type="button">
                                            Cancel
                                        </button>
                                    </div>
                                </div>
                            </div>*@
                    </div>
                    <div class="outer-table-wrapper">
                        <table id="x-table-data" class="table table-striped display nowrap" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>@Html.LabelFor(mode => mode.RowNumber)</th>
                                    <th>@Html.LabelFor(mode => mode.screen_name)</th>
                                    <th>@Html.LabelFor(mode => mode.view_flag)</th>
                                    <th>@Html.LabelFor(mode => mode.create_flag)</th>
                                    <th>@Html.LabelFor(mode => mode.update_flag)</th>
                                    <th>@Html.LabelFor(mode => mode.delete_flag)</th>
                                    <th class="action" style="text-align:center;">
                                        <i class="feather-icon icon-settings" style="font-size: large;"></i>
                                    </th>
                                </tr>
                            </thead>

                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Add Form Right Modal -->
<div class="modal right fade" id="action-form-modal" tabindex="-1" role="dialog" aria-labelledby="edit-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">
                        <i class="feather-icon icon-x"></i>
                    </span>
                </button>
                <h4 class="modal-title" id="myModalLabel2">Add @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])</h4>
            </div>

            <div class="modal-body group">

                @using (Html.BeginForm("CreateRoleAndScreen", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { @class = "one-col-form", id = "action-form" }))
                {
                    <div class="form-container form-horizontal">
                        <div class="row">
                            <div class="col-xs-12 form-wrapper-max">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.role_name, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-xs-9">
                                        @Html.EditorFor(model => model.role_name, new { @Value = @ViewBag.role_name, htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                        @Html.EditorFor(model => model.role_id, new { @Value = @ViewBag.role_id, htmlAttributes = new { @class = "form-control hidden" } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.screen_name, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-xs-9">
                                        <div class="dropdown">
                                            <button class="btn btn-default dropdown-toggle" id="ddl_screen_action" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                @Html.SpanFor(model => Model.screen_name, "Select...", new { @class = "selected-data" })
                                                @Html.TextBoxFor(model => Model.screen_id, htmlAttributes: new { @class = "selected-value hidden" })
                                                @Html.TextBoxFor(model => Model.screen_name, htmlAttributes: new { @class = "selected-data hidden" })
                                                <span class="caret"></span>
                                            </button>
                                            <div class="dropdown-menu">
                                                <div class="search-dropdown-menu">
                                                    <input type="text" data-action="@Url.Action("FillRoleAndScreen", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_screen_action" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                    <i class="feather-icon icon-search"></i>
                                                </div>
                                                <hr>
                                                <ul id="ul_screen_action"></ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.view_flag, htmlAttributes: new { @class = "control-label col-xs-3" })
                                    <div class="col-xs-6">
                                        <div class="radio-form">
                                            <div class="radio">
                                                <label class="radio-inline c-radio">
                                                    @Html.RadioButtonFor(m => m.view_flag, "true", htmlAttributes: new { @checked = "checked", @ischeck = "true" }) Yes

                                                </label>
                                                <label class="radio-inline c-radio">
                                                    @Html.RadioButtonFor(m => m.view_flag, "false", htmlAttributes: new { @ischeck = "false" }) No
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.create_flag, htmlAttributes: new { @class = "control-label col-xs-3" })
                                    <div class="col-xs-6">
                                        <div class="radio-form">
                                            <div class="radio">
                                                <label class="radio-inline c-radio">
                                                    @Html.RadioButtonFor(m => m.create_flag, "true", htmlAttributes: new { @checked = "checked", @ischeck = "true" }) Yes

                                                </label>
                                                <label class="radio-inline c-radio">
                                                    @Html.RadioButtonFor(m => m.create_flag, "false", htmlAttributes: new { @ischeck = "false" }) No
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.update_flag, htmlAttributes: new { @class = "control-label col-xs-3" })
                                    <div class="col-xs-6">
                                        <div class="radio-form">
                                            <div class="radio">
                                                <label class="radio-inline c-radio">
                                                    @Html.RadioButtonFor(m => m.update_flag, "true", htmlAttributes: new { @checked = "checked", @ischeck = "true" }) Yes

                                                </label>
                                                <label class="radio-inline c-radio">
                                                    @Html.RadioButtonFor(m => m.update_flag, "false", htmlAttributes: new { @ischeck = "false" }) No
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.delete_flag, htmlAttributes: new { @class = "control-label col-xs-3" })
                                    <div class="col-xs-6">
                                        <div class="radio-form">
                                            <div class="radio">
                                                <label class="radio-inline c-radio">
                                                    @Html.RadioButtonFor(m => m.delete_flag, "true", htmlAttributes: new { @checked = "checked", @ischeck = "true" }) Yes
                                                </label>
                                                <label class="radio-inline c-radio">
                                                    @Html.RadioButtonFor(m => m.delete_flag, "false", htmlAttributes: new { @ischeck = "false" }) No
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-12">
                            <hr>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-12">
                            <button type="submit" class="btn btn-primary btn-round btn-main btn-form-save">+ Add @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])</button>
                            <button type="reset" class="btn btn-default btn-round btn-main" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                }

            </div>
        </div>
        <!-- modal-content -->
    </div>
    <!-- modal-dialog -->
</div>

@section Styles {
    @Styles.Render("~/content/datatable")
    @Styles.Render("~/bundles/SweetAlertCss")
    <style>
        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
        }

        .dataTables_filter {
            display: none;
        }

        .dataTables_processing {
            z-index: 3000;
            padding-top: 10px !important;
        }
    </style>
}


@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/SweetAlert")
    <script>
        var isUpdate = "@IsUpdate";

        function Delete(role_id, screen_id) {
            swal({
                title: "Are you sure?",
                text: "",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes",
                cancelButtonText: "No",
                closeOnConfirm: true,
                closeOnCancel: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        $('.spinner').css('display', 'block');
                        var data = { role_id: role_id, screen_id: screen_id };
                        //console.log("Show form delete -> local");
                        GM.Defer(function () {
                            $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeleteRoleAndScreen", (string)this.ViewContext.RouteData.Values["controller"])",
                            content: "application/json; charset=utf-8",
                            dataType: "json",
                            data: data,
                            success: function (d) {
                                $('.spinner').css('display', 'none');
                                if (d.success) {

                                    swal("Deleted!", "Delete Success.", "success");
                                    GM.Defer(function () {
                                        //GM.Message.Clear();
                                        $('#action-form-modal').modal('hide');
                                        GM.RoleAndScreen.Form.Search();
                                        GM.RoleAndScreen.Table.draw();
                                    }, 500);
                                } else {
                                    // DoSomethingElse()
                                    swal("Deleted!", "Error : " + d.responseText, "error");
                                }
                            },
                            error: function (d) {
                                $('.spinner').css('display', 'none');
                                // TODO: Show error
                                GM.Message.Clear();
                            }
                            });
                        }, 500);
                    } else {
                        GM.Message.Clear();
                        swal("Cancelled", "Your Data not Delete", "error");
                    }
                }
        );
    }

        $(document).ready(function () {

            GM.RoleAndScreen = {};
            GM.RoleAndScreen.Table = $('#x-table-data').DataTable({
                dom: 'Bfrtip',
                select: false,
                searching: true,
                scrollY: '80vh',
                scrollX: true,
                //order: [
                //    [1, "desc"]
                //                            ],
                buttons:
                    [
                        //{
                        //    text: 'Refresh',
                        //    action: function (e, dt, node, config) {
                        //        dt.ajax.reload();
                        //    }
                        //}
                    ],
                processing: true,
                serverSide: true,
                ajax: {
                    "url": "@Url.Action("SearchRoleScreen", (string)this.ViewContext.RouteData.Values["controller"])",
                    "type": "POST",
                    "data": {
                        "role_id": $('#Txt_role_id').val()
                    }
                },

                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
                select: true,
                columnDefs:
                    [

                        { targets: 0, orderable: false, data: "RowNumber", width: 30, },
                        { targets: 1, data: "screen_name" },
                        { targets: 2, data: "view_flag" },
                        { targets: 3, data: "create_flag" },
                        { targets: 4, data: "update_flag" },
                        { targets: 5, data: "delete_flag" },
                        {
                            targets: 6,
                            data: "role_id",
                            className: "dt-body-center",
                            width: 60,
                            render: function (data, type, row, meta) {
                                var html = '';

                                if (row.parent_screen_id != null) {
                                    html += '<button class="btn btn-default btn-round" key="' + row.role_id + '" key2="' + row.screen_id + '" form-mode="edit"   onclick="GM.RoleAndScreen.Form(this)" @(!IsView? "disabled":"") ><i class="feather-icon icon-edit"></i></button>';
                                    html += '<button class="btn btn-delete  btn-round" key="' + row.role_id + '" key2="' + row.screen_id + '" form-mode="delete" onclick="GM.RoleAndScreen.Form(this)" @(!IsDelete? "disabled":"") ><i class="feather-icon icon-trash-2"></i></button>';
                                }

                                return html;
                            }
                        }
                    ],
                fixedColumns: {
                    leftColumns: 1,
                    rightColumns: 1
                },

            });

            GM.RoleAndScreen.Form = function (btn) {
                var mode = $(btn).attr("form-mode");

                    GM.Message.Clear();
                    GM.RoleAndScreen.Form.Initial();
                    var radio_viewyes = $("[id=view_flag][value=true]");
                    var radio_viewno = $("[id=view_flag][value=false]");
                    var radio_createyes = $("[id=create_flag][value=true]");
                    var radio_createno = $("[id=create_flag][value=false]");
                    var radio_updateyes = $("[id=update_flag][value=true]");
                    var radio_updateno = $("[id=update_flag][value=false]");
                    var radio_deleteyes = $("[id=delete_flag][value=true]");
                    var radio_deleteno = $("[id=delete_flag][value=false]");
                    if (mode)
                    {
                    var key = $(btn).attr("key");
                    var key2 = $(btn).attr("key2");
                    switch (mode) {
                        case "add":

                            @*$(".modal-title").text("Create @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])");*@
                            $(".modal-title").text("Create Screen");
                            radio_viewyes.removeAttr('disabled');
                            radio_viewno.removeAttr('disabled');
                            radio_createyes.removeAttr('disabled');
                            radio_createno.removeAttr('disabled');
                            radio_updateyes.removeAttr('disabled');
                            radio_updateno.removeAttr('disabled');
                            radio_deleteyes.removeAttr('disabled');
                            radio_deleteno.removeAttr('disabled');
                            $('#ddl_screen_action').removeAttr('disabled', 'disabled');

                            $('#action-form-modal').modal('show');
                            $('#action-form-modal').removeAttr('disabled');

                            $("#action-form :submit").removeClass('btn-delete').addClass('btn-primary').text('Create');
                            $("#action-form :submit").removeAttr("onclick");

                            $("#ddl_screen_action").find(".selected-data").text("Select...");
                            $("#action-form").attr("action", "@Url.Action("CreateRoleAndScreen", "Role")");

                            radio_viewyes.attr('ischeck', 'true');
                            radio_viewyes.attr('checked', 'checked');
                            radio_viewyes.prop('checked', true);
                            radio_viewno.removeAttr('checked');
                            radio_viewno.attr('ischeck', 'false');

                            radio_createyes.attr('ischeck', 'true');
                            radio_createyes.attr('checked', 'checked');
                            radio_createyes.prop('checked', true);
                            radio_createno.removeAttr('checked');
                            radio_createno.attr('ischeck', 'false');

                            radio_updateyes.attr('ischeck', 'true');
                            radio_updateyes.attr('checked', 'checked');
                            radio_updateyes.prop('checked', true);
                            radio_updateno.removeAttr('checked');
                            radio_updateno.attr('ischeck', 'false');

                            radio_deleteyes.attr('ischeck', 'true');
                            radio_deleteyes.attr('checked', 'checked');
                            radio_deleteyes.prop('checked', true);
                            radio_deleteno.removeAttr('checked');
                            radio_deleteno.attr('ischeck', 'false');

                            break;

                        case "edit":

                            GM.RoleAndScreen.Get({
                                role_id: key,
                                screen_id: key2,
                                    form: 'action-form',
                                    handler: function (response, status, jqxhr) {
                                        //GM.Unmask();
                                    }
                            });
                            $('#role_name').attr('readonly', true);
                            radio_viewyes.removeAttr('disabled');
                            radio_viewno.removeAttr('disabled');
                            radio_createyes.removeAttr('disabled');
                            radio_createno.removeAttr('disabled');
                            radio_updateyes.removeAttr('disabled');
                            radio_updateno.removeAttr('disabled');
                            radio_deleteyes.removeAttr('disabled');
                            radio_deleteno.removeAttr('disabled');
                            $('#ddl_screen_action').attr('disabled', 'disabled');

                            $('#action-form-modal').modal('show');
                            @*$(".modal-title").text("Edit @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])");*@
                            $(".modal-title").text("Edit Screen");
                            $("#action-form :submit").removeAttr("onclick");
                            $("#action-form :submit").removeClass('btn-delete').addClass('btn-primary').text('Update');

                            if (isUpdate == "False") {
                                $('#action-form :submit').attr('disabled', "disabled");
                            }

                            $("#action-form").attr("action", "@Url.Action("EditRoleAndScreen", "Role")");

                            break;

                        case "delete":

                            $(".modal-title").text("Are you sure you want to delete this?");
                            GM.RoleAndScreen.Get({
                                role_id: key,
                                screen_id: key2,

                                form: 'action-form',
                                handler: function (response, status, jqxhr) {
                                }
                            });
                            radio_viewyes.attr('disabled', 'disabled');
                            radio_viewno.attr('disabled', 'disable');
                            radio_createyes.attr('disabled', 'disabled');
                            radio_createno.attr('disabled', 'disable');
                            radio_updateyes.attr('disabled', 'disabled');
                            radio_updateno.attr('disabled', 'disable');
                            radio_deleteyes.attr('disabled', 'disabled');
                            radio_deleteno.attr('disabled', 'disable');
                            $('#ddl_screen_action').attr('disabled', 'disabled');

                            $('#action-form-modal').modal('show');
                            $("#action-form :submit").removeClass('btn-primary').addClass('btn-delete').text('Delete');
                            $("#action-form :submit").attr("onclick", "Delete(" + key + "," + key2 + ")");
                            $("#action-form").attr("action", "notpost");

                            break;
                    }
                }
        };

        GM.RoleAndScreen.Get = function (op) {
            $.get("@Url.Action("EditRoleAndScreen", (string)this.ViewContext.RouteData.Values["controller"])", {role_id: op.role_id, screen_id: op.screen_id, t: GM.Time })
            .done(function (response, status, jqxhr) {
                    // this is the "success" callback
            GM.RoleAndScreen.Form.DataBinding({ form: op.form, data: response });
                op.handler(response)
            })
            .fail(function (jqxhr, status, error) {
            });
        };

        $("#NavBar").html($('#NavRole').val());
    });
    </script>
    @Scripts.Render("~/module/rolescreenmapping")
    @Scripts.Render("~/module/validation")
}
