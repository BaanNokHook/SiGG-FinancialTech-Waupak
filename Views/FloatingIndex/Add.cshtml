@model GM.Data.Model.MarketRate.FloatingIndexModel
@{
    ViewBag.Title = "Add";

    Layout = "~/Views/Shared/MainLayout.cshtml";
    bool isUpdate = IsUpdate;
}
@using (Html.BeginForm())
{
    <section class="working-content two-nav-padding" data-spy="scroll" data-target="#counterparty-scrollspy" data-offset="200">
        <div class="container-fluid container-fixed">

            <!--Second Navbar-->
            <nav id="counterparty-scrollspy" class="navbar navbar-defult top-navbar section-nav-wrapper">
                <div class="navbar-wrapper sub-topnav section-nav">
                    <ul class="nav navbar-nav">
                        <li class="active" id="detail-li">
                            <a href="#security-detail" onclick="expandpanel('detail')">Detail</a>
                        </li>
                        <li>
                            <div class="vertical-line"></div>
                        </li>
                        <li class="submit-nav">
                            @if (Model.page_name == "addpage")
                            {
                                <button type="submit" class="btn btn-link">Submit</button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-link" @(!isUpdate ? "disabled" : "")>Submit</button>
                            }

                            <button type="reset" class="btn btn-link" onclick="location.href='@Url.Action("Index", "FloatingIndex")'">Back</button>
                        </li>
                    </ul>
                </div>
            </nav>

            <!-- PageTitle -->
            <div class="row row-fixed">
                <div class="col-lg-12 col-fixed">
                    <div class="page-title">
                        <div class="breadcrumb-wrap">
                            <ol class="breadcrumb" id="NavBar">
                                @*<li>
                                    <a href="..\Home\Index">Home</a>
                                </li>
                                <li class="active">Market Process</li>
                                <li class="active">Market Rate</li>
                                <li class="active">Floating Index</li>*@
                            </ol>
                        </div>
                        <div class="title">
                            <h1>
                                Floating Index
                            </h1>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Content Zone -->
            <div class="row row-fixed">
                <div class="col-xs-12 col-fixed">

                    <!-- RPReference Detail -->
                    <div id="security-detail" class="box-content no-padding">
                        <div id="security-detail-icon" class="box-header big-head expand-able" aria-expanded="true" data-toggle="collapse" data-target="#security-detail-form">
                            <div class="left-item">
                                <div class="title">
                                    <i class="feather-icon icon-minus"></i><h3>Floating Index History</h3>
                                </div>
                            </div>
                        </div>
                        <div id="security-detail-form" class="form-container form-horizontal have-head collapse in">
                            <div class="form-container form-horizontal">
                                <div class="row">

                                    <div class="col-xs-12 form-wrapper-1100">
                                        <div class="form-group-wrapper">
                                            @Html.HiddenFor(model => model.page_name)
                                            <input id="hdd_page_name" type="hidden" name="page_name" value="@ViewBag.page_name">

                                            <div class="form-group">
                                                @Html.LabelForRequired(model => model.floating_index_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    <div class="input-group date">
                                                        @Html.EditDateFor(model => model.floating_index_date, new { id = "txt_floating_index_date", @class = "form-control date-time-picker-weekend" })
                                                        <span class="input-group-addon">
                                                            <span class="feather-icon icon-calendar-weekend"></span>
                                                        </span>
                                                    </div>
                                                    @Html.ValidationMessageFor(model => model.floating_index_date, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.floating_index_code, htmlAttributes: new { @class = "control-label col-xs-2" })
                                                <div class="col-xs-4">
                                                    <div class="dropdown">
                                                        <button class="btn btn-default dropdown-toggle" id="ddl_floatingindex" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                            @Html.SpanFor(model => model.floating_index_code, "Select...", new { @class = "selected-data" })
                                                            @*@Html.TextBoxFor(model => model.floating_index_code, htmlAttributes: new { @class = "selected-value hidden" })*@
                                                            @Html.TextBoxFor(model => model.floating_index_code, htmlAttributes: new { @class = "selected-data hidden" })
                                                            <span class="caret"></span>
                                                        </button>
                                                        <div class="dropdown-menu">
                                                            <div class="search-dropdown-menu">
                                                                <input type="text" data-action="@Url.Action("FillFloatingIndex", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_floatingindex" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                                <i class="feather-icon icon-search"></i>
                                                            </div>
                                                            <hr>
                                                            <ul id="ul_floatingindex"></ul>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.cur, htmlAttributes: new { @class = "control-label col-xs-2" })
                                                <div class="col-xs-4">
                                                    <div class="dropdown">
                                                        <button class="btn btn-default dropdown-toggle" id="ddl_currency" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                            @Html.SpanFor(model => model.cur, "Select...", new { @class = "selected-data" })
                                                            @Html.TextBoxFor(model => model.cur, htmlAttributes: new { @class = "selected-value hidden" })
                                                            @Html.TextBoxFor(model => model.cur, htmlAttributes: new { @class = "selected-data hidden" })
                                                            <span class="caret"></span>
                                                        </button>
                                                        <div class="dropdown-menu">
                                                            <div class="search-dropdown-menu">
                                                                <input type="text" data-action="@Url.Action("FillCurrency", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_currency" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                                <i class="feather-icon icon-search"></i>
                                                            </div>
                                                            <hr>
                                                            <ul id="ul_currency"></ul>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelForRequired(model => model.effective_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    <div class="input-group date">
                                                        @Html.EditDateFor(model => model.effective_date, new { id = "txt_effective_date", @class = "form-control date-time-picker-weekend" })
                                                        <span class="input-group-addon">
                                                            <span class="feather-icon icon-calendar-weekend"></span>
                                                        </span>
                                                    </div>
                                                    @Html.ValidationMessageFor(model => model.effective_date, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.rate_on, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.rate_on, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return text_OnKeyPress_NumberOnlyAndDotAndM(this);" } })
                                                    @Html.ValidationMessageFor(model => model.rate_on, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.rate_1week, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.rate_1week, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return text_OnKeyPress_NumberOnlyAndDotAndM(this);" } })
                                                    @Html.ValidationMessageFor(model => model.rate_1week, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.rate_1month, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.rate_1month, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return text_OnKeyPress_NumberOnlyAndDotAndM(this);" } })
                                                    @Html.ValidationMessageFor(model => model.rate_1month, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.rate_2month, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.rate_2month, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return text_OnKeyPress_NumberOnlyAndDotAndM(this);" } })
                                                    @Html.ValidationMessageFor(model => model.rate_2month, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.rate_3month, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.rate_3month, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return text_OnKeyPress_NumberOnlyAndDotAndM(this);" } })
                                                    @Html.ValidationMessageFor(model => model.rate_3month, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.rate_6month, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.rate_6month, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return text_OnKeyPress_NumberOnlyAndDotAndM(this);" } })
                                                    @Html.ValidationMessageFor(model => model.rate_6month, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.rate_9month, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.rate_9month, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return text_OnKeyPress_NumberOnlyAndDotAndM(this);" } })
                                                    @Html.ValidationMessageFor(model => model.rate_9month, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.rate_1year, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-xs-4">
                                                    @Html.EditorFor(model => model.rate_1year, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return text_OnKeyPress_NumberOnlyAndDotAndM(this);" } })
                                                    @Html.ValidationMessageFor(model => model.rate_1year, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div id="security-submit" class="page-button-submit">
                                @if (Model.page_name == "addpage")
                                {
                                    <button type="submit" class="btn btn-primary btn-round btn-big">Submit</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-primary btn-round btn-big" @(!isUpdate ? "disabled" : "")>Submit</button>
                                }
                                <button type="reset" class="btn btn-link">Clear Data</button>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </section>
}

@section Styles {
    @Styles.Render("~/bundles/SweetAlertCss")
    @Styles.Render("~/content/datatable")
    <style>
        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
        }

        .dataTables_filter {
            display: none;
        }

        .dataTables_processing {
            z-index: 3000;
            padding-top: 10px !important;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/SweetAlert")

    <script>
        $(document).ready(function () {

            var isUpdate = "@isUpdate";

            //Enable or Disable Control
            var page_name = $('#hdd_page_name').val();
            if (page_name == 'editpage') {
                $('#txt_floating_index_date').attr('disabled', 'disabled');
                $('#ddl_floatingindex').attr('disabled', 'disabled');
                $('#ddl_currency').attr('disabled', 'disabled');

                if (isUpdate == "False") {
                    $('#txt_effective_date').attr('disabled', 'disabled');
                    $('#rate_on').attr('disabled', 'disabled');
                    $('#rate_1week').attr('disabled', 'disabled');
                    $('#rate_1month').attr('disabled', 'disabled');
                    $('#rate_2month').attr('disabled', 'disabled');
                    $('#rate_3month').attr('disabled', 'disabled');
                    $('#rate_6month').attr('disabled', 'disabled');
                    $('#rate_9month').attr('disabled', 'disabled');
                    $('#rate_1year').attr('disabled', 'disabled');
                }
            }
            else {
                $('#txt_floating_index_date').removeAttr('disabled', 'disabled');
                $('#ddl_floatingindex').removeAttr('disabled', 'disabled');
                $('#ddl_currency').removeAttr('disabled', 'disabled');
            }
            //End Enable or Disable Control

            var input = $('.input-validation-error:first');
            if (input) {
                input.focus();
            }

            $("#NavBar").html($('#NavFloatingIndex').val());

        });
    </script>
    @Scripts.Render("~/module/validation")
    @Scripts.RenderFormat("<script type=\"text/javascript\" src=\"{0}?nocache=" + DateTime.Now.ToString("ddmmyyyyHHmmss") + "\"></script>", "~/module/floatingindex")

}


