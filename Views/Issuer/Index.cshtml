@model GM.Data.View.CounterParty.IssuerViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

<section class="working-content">
    <div class="container-fluid container-fixed">
        <!-- PageTitle -->
        <div class="row row-fixed">
            <div class="col-lg-12 col-fixed">
                <div class="page-title">
                    <div class="breadcrumb-wrap">
                        <ol class="breadcrumb" id="NavBar">
                            @*<li>
                                <a href="Home\Index">Home</a>
                            </li>
                            <li class="active">Static Process</li>
                            <li class="active">Counter Party</li>
                            <li class="active">Issuer</li>*@
                        </ol>
                    </div>
                    <div class="title">
                        <h1>
                            Issuer
                        </h1>
                    </div>
                </div>
            </div>
        </div>
        <!-- Content Zone -->
        <div class="row row-fixed">
            <div class="col-xs-12 col-fixed">
                <!-- Search Zone -->
                <div class="box-content" id="search-form-modal">
                    <div class="box-header">
                        <div class="left-item">
                            <div class="title">
                                <h3>Search @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])</h3>
                            </div>
                        </div>
                        <div class="right-item">
                            <button id="user-master" class="btn btn-link less-more-option">
                                Show more option
                                <i class="feather-icon icon-chevron-down"></i>
                            </button>
                        </div>
                    </div>
                    @using (Html.BeginForm("Search", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { @class = "one-col-form", id = "search-form" }))
                    {
                        <div class="form-container form-horizontal">
                            <div class="row">
                                <div class="col-xs-12 form-wrapper-1100">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FormSearch.issuer_code, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            @Html.EditorFor(model => model.FormSearch.issuer_code, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                        @Html.LabelFor(model => model.FormSearch.issuer_shortname, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            @Html.EditorFor(model => model.FormSearch.issuer_shortname, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="advance-form" style="display: none;">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FormSearch.issuer_name, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                @Html.EditorFor(model => model.FormSearch.issuer_name, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                            @Html.LabelFor(model => model.FormSearch.issuer_thainame, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                @Html.EditorFor(model => model.FormSearch.issuer_thainame, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FormSearch.issuer_type_code, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-xs-4">
                                                <div class="dropdown">
                                                    <button class="btn btn-default dropdown-toggle" id="ddl_IssuerType" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                        @Html.SpanFor(model => Model.FormSearch.issuer_type_desc, "Select...", new { @class = "selected-data" })
                                                        @Html.TextBoxFor(model => Model.FormSearch.issuer_type_code, htmlAttributes: new { @class = "selected-value hidden" })
                                                        @Html.TextBoxFor(model => Model.FormSearch.issuer_type_desc, htmlAttributes: new { @class = "selected-data hidden" })
                                                        <span class="caret"></span>
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        <div class="search-dropdown-menu">
                                                            <input type="text" data-action="@Url.Action("FillIssuerType", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_IssuerType" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                            <i class="feather-icon icon-search"></i>
                                                        </div>
                                                        <hr>
                                                        <ul id="ul_IssuerType"></ul>
                                                    </div>
                                                </div>
                                            </div>
                                            @Html.LabelFor(model => model.FormSearch.tel_no, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-xs-4">
                                                @Html.EditorFor(model => model.FormSearch.tel_no, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <hr>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <button class="btn btn-primary btn-round btn-main btn-search" type="submit">Confirm</button>
                                    <button class="btn btn-link btn-link-secondary" type="reset">Clear Data</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Div Detail -->
                <div class="box-content table-content">
                    <div class="group box-header-wrapper">
                        <div class="box-header">
                            <div class="left-item">
                                <div class="title">
                                    <h3>Details</h3>
                                </div>
                            </div>
                            <div class="right-item">
                                <div class="add-data">
                                    <!-- <button class="btn btn-primary btn-round" type="button" data-toggle="modal" data-target="#edit-modal">
                                      + Add User
                                    </button> -->
                                    <div class="dropdown">
                                        <button class="btn btn-primary btn-round dropdown-toggle" type="button" id="btnAdd" form-mode="add" onclick="location.href='@Url.Action("Add")';return false;" @(!IsCreate ? "disabled" : "") >
                                            + Add @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="outer-table-wrapper">
                        <table id="x-table-data" class="table table-striped display nowrap" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.RowNumber)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.issuer_id)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.cif_no)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.issuer_code)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.issuer_name)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.issuer_shortname)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.issuer_thainame)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.issuer_type_desc)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.domicile_code)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.country_desc)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.tel_no)</th>
                                    <th class="action" style="text-align:center;">
                                        <i class="feather-icon icon-settings" style="font-size: large;"></i>
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Styles {
    @Styles.Render("~/bundles/SweetAlertCss")
    @Styles.Render("~/content/datatable")
    <style>
        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
        }

        .dataTables_filter {
            display: none;
        }

        .dataTables_processing {
            z-index: 3000;
            padding-top: 10px !important;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/SweetAlert")
    <script>
        $(document).ready(function () {

         $("#NavBar").html($('#NavIssuer').val());
        //Function : Binding Table
        GM.Issuer = {};
        GM.Issuer.Table = $('#x-table-data').DataTable({
            dom: 'Bfrtip',
            select: false,
            searching: true,
            scrollY: '80vh',
            scrollX: true,
            order: [
                [4, "desc"]
            ],
            buttons: [],
            processing: true,
            serverSide: true,
            ajax: {
                "url": "@Url.Action("Search", (string)this.ViewContext.RouteData.Values["controller"])",
                "type": "POST",
                "error": function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            },

            select: {
                style: 'os',
                selector: 'td:first-child'
            },
            select: true,
            columnDefs:
            [
                { targets: 0, data: "RowNumber", orderable: false },
                { targets: 1, data: "issuer_id", visible: false },
                { targets: 2, data: "cif_no" },
                { targets: 3, data: "issuer_code" },
                { targets: 4, data: "issuer_name" },
                { targets: 5, data: "issuer_shortname"},
                { targets: 6, data: "issuer_thainame"},
                { targets: 7, data: "issuer_type_desc" },
                { targets: 8, data: "domicile_code" },
                { targets: 9, data: "country_desc" },
                { targets: 10, data: "tel_no" },
                {
                    targets: 11,
                    orderable: false,
                    data: "issuer_id",
                    className: "dt-body-center",
                    width: 60,
                    render: function (data, type, row, meta) {
                        var html = '';
                        html += '<button class="btn btn-default btn-round" form-mode="edit"   onclick="location.href=\'@Url.Action("Edit", (string)this.ViewContext.RouteData.Values["controller"] )?id=' + row.issuer_id + '\'" @(!IsView? "disabled":"") ><i class="feather-icon icon-edit"></i></button>';
                        html += '<button class="btn btn-delete  btn-round" form-mode="delete" key="' + row.issuer_id + '" onclick="GM.Issuer.Delete(this)" @(!IsDelete? "disabled":"") ><i class="feather-icon icon-trash-2"></i></button>';
                        return html;
                    }
                }
            ],
            fixedColumns: {
                leftColumns: 1,
                rightColumns: 1
            },

        });

        GM.Issuer.Delete = function (btn) {
            var mode = $(btn).attr("form-mode");
            GM.Message.Clear();
            if (mode) {
                var key = $(btn).attr("key");
                switch (mode) {
                    case "delete":
                        Delete(key);
                        break;
                }
            }
        };

        GM.Issuer.Table.SelectAll  = function (check) {

            if ($(check)[0].checked) {
                GM.Issuer.Table.rows().select();
            }
            else {
                GM.Issuer.Table.rows().deselect();
            }
        }
     });

        //Function : Delete

     function Delete(issuer_id) {
        swal({
            title: "Are you sure?",
            text: "",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            closeOnConfirm: true,
            closeOnCancel: true
        },
            function (isConfirm) {
                if (isConfirm) {
                    $('.spinner').css('display', 'block');
                    var data = { issuer_id: issuer_id };
                    //console.log("Show form delete -> local");
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Deletes", (string)this.ViewContext.RouteData.Values["controller"])",
                        content: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        success: function (d) {
                            $('.spinner').css('display', 'none');
                            if (d.success) {
                                setTimeout(function () {
                                    swal("Deleted!", "Delete Success.", "success");
                                }, 100);
                                //$('#action-form-modal').modal('hide');
                                GM.Message.Clear();
                                GM.Issuer.Form.Search();
                                GM.Issuer.Table.draw();
                            } else {
                                // DoSomethingElse()
                                swal("Deleted!", "Error : " + d.responseText, "error");
                            }
                        },
                        error: function (d) {
                            $('.spinner').css('display', 'none');
                            // TODO: Show error
                            GM.Message.Clear();
                        }
                    });
                } else {
                    GM.Message.Clear();
                    swal("Cancelled", "Your Data don't delete", "error");
                }
             });

        
     }
    </script>
    @Scripts.Render("~/module/issuerindex")
}
