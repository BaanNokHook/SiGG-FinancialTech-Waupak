@model GM.Data.View.CounterParty.CounterPartyViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}
<section class="working-content">
    <div class="container-fluid container-fixed">
        <!-- PageTitle -->
        <div class="row row-fixed">
            <div class="col-lg-12 col-fixed">
                <div class="page-title">
                    <div class="breadcrumb-wrap">
                        <ol class="breadcrumb" id="NavBar">
                            @*<li>
                                <a href="Home\Index">Home</a>
                            </li>
                            <li class="active">Static Process</li>
                            <li class="active">Counter Party</li>
                            <li class="active">Counter Party</li>*@
                        </ol>
                    </div>
                    <div class="title">
                        <h1>
                            Counter Party
                        </h1>
                    </div>
                </div>
            </div>
        </div>
        <!-- Content Zone -->
        <div class="row row-fixed">
            <div class="col-xs-12 col-fixed">
                <!-- Search Zone -->
                <div class="box-content" id="search-form-modal">
                    <div class="box-header">
                        <div class="left-item">
                            <div class="title">
                                <h3>Search @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])</h3>
                            </div>
                        </div>
                        <div class="right-item">
                            <button id="user-master" class="btn btn-link less-more-option">
                                Show more option
                                <i class="feather-icon icon-chevron-down"></i>
                            </button>
                        </div>
                    </div>
                    @using (Html.BeginForm("Search", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { @class = "one-col-form", id = "search-form" }))
                    {
                        <div class="form-container form-horizontal">
                            <div class="row">
                                <div class="col-xs-12 form-wrapper-1100">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FormSearch.counter_party_code, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            @Html.EditorFor(model => model.FormSearch.counter_party_code, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                        @Html.LabelFor(model => model.FormSearch.counter_party_shortname, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            @Html.EditorFor(model => model.FormSearch.counter_party_shortname, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="advance-form" style="display: none;">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FormSearch.counter_party_name, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-xs-4">
                                                @Html.EditorFor(model => model.FormSearch.counter_party_name, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                            @Html.LabelFor(model => model.FormSearch.counter_party_thainame, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-xs-4">
                                                @Html.EditorFor(model => model.FormSearch.counter_party_thainame, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FormSearch.counter_party_type_code, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-xs-4">
                                                @Html.EditorFor(model => model.FormSearch.counter_party_type_code, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                            @Html.LabelFor(model => model.FormSearch.tel_no, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-xs-4">
                                                @Html.EditorFor(model => model.FormSearch.tel_no, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <hr>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <button class="btn btn-primary btn-round btn-main btn-search" type="submit">Confirm</button>
                                    <button class="btn btn-link btn-link-secondary" type="reset">Clear Data</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <!-- Data Table(new) -->
                <div class="box-content table-content">
                    <div class="group box-header-wrapper">
                        <div class="box-header">
                            <div class="left-item">
                                <div class="title">
                                    <h3>Details</h3>
                                </div>
                            </div>
                            <div class="right-item">
                                <div class="add-data">
                                    <!-- <button class="btn btn-primary btn-round" type="button" data-toggle="modal" data-target="#edit-modal">
                                      + Add User
                                    </button> -->
                                    <div class="dropdown">
                                        <button class="btn btn-primary btn-round dropdown-toggle" type="button" id="btnAdd" form-mode="add" onclick="location.href='@Url.Action("Add")';return false;" @(!IsCreate ? "disabled" : "")>
                                            + Add @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="outer-table-wrapper">
                        <table id="x-table-data" class="table table-striped display nowrap" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.RowNumber)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.cif_no)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.counter_party_code)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.counter_party_shortname)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.counter_party_name)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.counter_party_thainame)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.contact_person)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.tel_no)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.counter_party_type_code)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.counter_party_id)</th>
                                    <th class="action" style="text-align:center;">
                                        <i class="feather-icon icon-settings" style="font-size: large;"></i>
                                    </th>
                                </tr>
                            </thead>

                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section Styles {
    @Styles.Render("~/bundles/SweetAlertCss")
    @Styles.Render("~/content/datatable")
    <style>
        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
        }

        .dataTables_filter {
            display: none;
        }

        .dataTables_processing {
            z-index: 3000;
            padding-top: 10px !important;
        }
    </style>
}


@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/SweetAlert")
    <script>
        function Delete(counter_party_id) {
        swal({
            title: "Are you sure?",
            text: "",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            closeOnConfirm: true,
            closeOnCancel: true
        },
            function (isConfirm) {
                if (isConfirm) {
                    $('.spinner').css('display', 'block');
                    var data = { counterpartyid: counter_party_id };
                    //console.log("Show form delete -> local");
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Deletes", (string)this.ViewContext.RouteData.Values["controller"])",
                        content: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        success: function (d) {
                            $('.spinner').css('display', 'none');
                            if (d.success) {
                                setTimeout(function () {
                                    swal("Deleted!", "Delete Success.", "success");
                                }, 100);
                                //$('#action-form-modal').modal('hide');
                                GM.Message.Clear();
                                GM.CounterParty.Search();
                                GM.CounterParty.Table.draw();
                            } else {
                                setTimeout(function() {
                                    swal("Deleted!", d.responseText, "error");
                                }, 100);
                            }
                        },
                        error: function (d) {
                            $('.spinner').css('display', 'none');
                            // TODO: Show error
                            GM.Message.Clear();
                        }
                    });
                } else {
                    GM.Message.Clear();
                    swal("Cancelled", "Your Data don't delete", "error");
                }
            });
    }
    $(document).ready(function () {

        GM.CounterParty = {};
        GM.CounterParty.Table = $('#x-table-data').DataTable({
            dom: 'Bfrtip',
            select: false,
            searching: true,
            scrollY: '80vh',
            scrollX: true,
            order: [
                [1, "asc"]
            ],
            buttons:
            [
                //{
                //    text: 'Refresh',
                //    action: function (e, dt, node, config) {
                //        dt.ajax.reload();
                //    }
                //}
            ],
            processing: true,
            serverSide: true,
            ajax: {
                "url": "@Url.Action("Search", (string)this.ViewContext.RouteData.Values["controller"])",
                "type": "POST",
                "error": function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            },
            columnDefs:
                [
                    { targets: 0, orderable: false, data: "RowNumber", width: 30 },
                    { targets: 1, data: "cif_no" },
                    { targets: 2, data: "counter_party_code" },
                    { targets: 3, data: "counter_party_shortname" },
                    { targets: 4, data: "counter_party_name" },
                    { targets: 5, data: "counter_party_thainame" },
                    { targets: 6, data: "contact_person" },
                    { targets: 7, data: "tel_no" },
                    { targets: 8, data: "counter_party_type_code" },
                    { targets: 9, data: "counter_party_id", "visible": false},
                    {
                        targets: 10,
                        data: "counter_party_id",
                        className: "dt-body-center",
                        width: 60,
                        render: function (data, type, row, meta) {
                            var html = '';
                            html += '<button class="btn btn-default btn-round" form-mode="edit"   onclick="location.href=\'@Url.Action("Edit", (string)this.ViewContext.RouteData.Values["controller"] )?id=' + row.counter_party_id + '\'" @(!IsView? "disabled":"") ><i class="feather-icon icon-edit"></i></button>';
                            html += '<button class="btn btn-delete  btn-round" form-mode="delete" key="' + row.counter_party_id + '" onclick="GM.CounterParty.Delete(this)" @(!IsDelete? "disabled":"") ><i class="feather-icon icon-trash-2"></i></button>';
                            return html;
                        }
                    }
            ],
            fixedColumns: {
                leftColumns: 1,
                rightColumns: 1
            },

        });

        GM.CounterParty.Delete = function (btn) {
            var mode = $(btn).attr("form-mode");
            GM.Message.Clear();
            if (mode){
                var key = $(btn).attr("key");
                switch (mode){
                    case "delete":
                        Delete(key);
                        break;
                }
            }
        };

        GM.CounterParty.Get = function (op) {
            $.get("@Url.Action("Edit", (string)this.ViewContext.RouteData.Values["controller"])", { id: op.id, t: GM.Time })
             .done(function (response, status, jqxhr) {
                    // this is the "success" callback
                 GM.CounterParty.Form.DataBinding({ form: op.form, data: response });
                    op.handler(response);
                })
             .fail(function (jqxhr, status, error) {
              });
        };

        $("#action-form").on('submit', function (e) {

            GM.Message.Clear();
            e.preventDefault(); // prevent the form's normal submission

            var dataToPost = $(this).serialize();
            var action = $(this).attr('action');

            GM.Mask('#action-form-modal .modal-content');
            $.post(action, dataToPost)

                .done(function (response, status, jqxhr) {
                    // this is the "success" callback
                    GM.Unmask();

                    if (response.Success) {
                        GM.Message.Success('.modal-body', response.Message);
                        GM.Defer(function () {
                            $('#action-form-modal').modal('hide');
                            GM.CounterParty.Table.draw();
                        }, 500);
                    }
                    else {
                        GM.Message.Error('.modal-body', response.Message);
                    }
                })

                .fail(function (jqxhr, status, error) {
                    // this is the ""error"" callback
                    //console.log("fail");
                });
        });


        //$('#btnAdd').on("click", function () {
        //    GM.Security.Form(this);
        //});

        $("#NavBar").html($('#NavCounterParty').val());
    });
    </script>
    @*@Scripts.Render("~/module/counterpartyindex")*@

    @Scripts.RenderFormat("<script type=\"text/javascript\" src=\"{0}?nocache=" + DateTime.Now.ToString("ddmmyyyyHHmmss") + "\"></script>", "~/module/counterpartyindex")
}



