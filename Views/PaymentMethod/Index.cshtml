@model GM.Data.View.Static.PaymentMethodViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

<section class="working-content">
    <div class="container-fluid container-fixed">
        <!-- PageTitle -->
        <div class="row row-fixed">
            <div class="col-lg-12 col-fixed">
                <div class="page-title">
                    <div class="breadcrumb-wrap">
                        <ol class="breadcrumb" id="NavBar">
                            @*<li>
                                <a href="Home\Index">Home</a>
                            </li>
                            <li class="active">Static Process</li>
                            <li class="active">Static</li>
                            <li class="active">Payment Method</li>*@
                        </ol>
                    </div>
                    <div class="title">
                        <h1>
                            Payment Method
                        </h1>
                    </div>
                </div>
            </div>
        </div>
        <!-- Content Zone -->
        <div class="row row-fixed">
            <div class="col-xs-12 col-fixed">
                <!-- Search Zone -->
                <div class="box-content" id="search-form-modal">
                    <div class="box-header">
                        <div class="left-item">
                            <div class="title">
                                <h3>Search @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])</h3>
                            </div>
                        </div>
                        <div class="right-item">
                            <button id="user-master" class="btn btn-link less-more-option">
                                Show more option
                                <i class="feather-icon icon-chevron-down"></i>
                            </button>
                        </div>
                    </div>
                    @using (Html.BeginForm("Search", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { @class = "one-col-form", id = "search-form" }))
                    {
                        <div class="form-container form-horizontal">
                            <div class="row">
                                <div class="col-xs-12 form-wrapper-1100">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FormSearch.payment_method, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            @Html.EditorForValidate(model => model.FormSearch.payment_method, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                        @Html.LabelFor(model => model.FormSearch.payment_flag_item, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-xs-4">
                                            <div class="dropdown">
                                                <button class="btn btn-default dropdown-toggle" id="ddl_PaymentFlag" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                    @Html.SpanFor(model => Model.FormSearch.payment_flag_item, "Select...", new { @class = "selected-data" })
                                                    @Html.TextBoxFor(model => Model.FormSearch.payment_flag, htmlAttributes: new { @class = "selected-value hidden" })
                                                    @Html.TextBoxFor(model => Model.FormSearch.payment_flag_item, htmlAttributes: new { @class = "selected-data hidden" })
                                                    <span class="caret"></span>
                                                </button>
                                                <div class="dropdown-menu">
                                                    <div class="search-dropdown-menu">
                                                        <input type="text" data-action="@Url.Action("FillPaymentFlag", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_PaymentFlag" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                        <i class="feather-icon icon-search"></i>
                                                    </div>
                                                    <hr>
                                                    <ul id="ul_PaymentFlag"></ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="advance-form" style="display: none;">
                                        <div class="form-group">
                                            @Html.LabelFor(mode => Model.FormSearch.system_type, htmlAttributes: new { @class = "control-label col-xs-2" })
                                            <div class="col-xs-4">
                                                @Html.DropDownListFor(model => model.FormSearch.system_type, (SelectList)ViewBag.SystemType, "- Select All -", new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <hr>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <button class="btn btn-primary btn-round btn-main btn-search" type="submit">Confirm</button>
                                    <button class="btn btn-link btn-link-secondary" type="reset">Clear Data</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Div Detail -->
                <div class="box-content table-content">
                    <div class="group box-header-wrapper">
                        <div class="box-header">
                            <div class="left-item">
                                <div class="title">
                                    <h3>Details</h3>
                                </div>
                            </div>
                            <div class="right-item">
                                <div class="add-data">
                                    <!-- <button class="btn btn-primary btn-round" type="button" data-toggle="modal" data-target="#edit-modal">
                                      + Add User
                                    </button> -->
                                    <div class="dropdown">
                                        <button class="btn btn-primary btn-round dropdown-toggle" type="button" id="btnAdd" form-mode="add" @(!IsCreate ? "disabled" : "") >
                                            + Add @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="outer-table-wrapper">
                        <table id="x-table-data" class="table table-striped display nowrap" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.RowNumber)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.payment_method)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.payment_flag)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.payment_flag_item)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.system_type)</th>
                                    <th>@Html.LabelFor(mode => mode.FormSearch.description)</th>
                                    <th class="action" style="text-align:center;">
                                        <i class="feather-icon icon-settings" style="font-size: large;"></i>
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Add Form Right Modal -->
<div class="modal right fade" id="action-form-modal" tabindex="-1" role="dialog" aria-labelledby="edit-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">
                        <i class="feather-icon icon-x"></i>
                    </span>
                </button>
                <h4 class="modal-title" id="myModalLabel2">Add @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])</h4>
            </div>
            <div class="modal-body group">
                @using (Html.BeginForm("Create", "PaymentMethod", FormMethod.Post, new { @class = "one-col-form", id = "action-form" }))
                {
                    <div class="form-container form-horizontal">
                        <div class="row">
                            <div class="col-xs-12 form-wrapper-max">
                                <div class="form-group">
                                    @Html.LabelForRequired(model => model.FormAction.payment_method, htmlAttributes: new { @class = "control-label col-xs-3" })
                                    <div class="col-xs-9">
                                        @Html.EditorForValidate(model => model.FormAction.payment_method, new { htmlAttributes = new { @class = "form-control ", required = "required" } })
                                        <span id="payment_method_error" class="field-validation-error text-danger" data-valmsg-replace="true">
                                        </span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FormAction.description, htmlAttributes: new { @class = "control-label col-xs-3" })
                                    <div class="col-xs-9">
                                        @Html.EditorForValidate(model => model.FormAction.description, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelForRequired(mode => Model.FormAction.system_type, htmlAttributes: new { @class = "control-label col-xs-3" })
                                    <div class="col-xs-9">
                                        <div class="dropdown">
                                            <button class="btn btn-default dropdown-toggle" id="ddl_term" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                @Html.SpanFor(model => model.FormAction.system_type, "Select...", new { @class = "selected-data" })
                                                @Html.TextBoxFor(model => model.FormAction.system_type, htmlAttributes: new { @class = "selected-value hidden" })
                                                @Html.TextBoxFor(model => model.FormAction.system_type, htmlAttributes: new { @class = "selected-data hidden" })
                                                <span class="caret"></span>
                                            </button>
                                            <div class="dropdown-menu">
                                                <div class="search-dropdown-menu">
                                                    <input type="text" id="txt_term" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                    <i class="feather-icon icon-search"></i>
                                                </div>
                                                <hr>
                                                <ul id="ul_term">
                                                    <li class='searchterm'>
                                                        <a onclick='AddTextForDDL("BOTH","txt_term","BOTH",null,null)'>BOTH</a>
                                                        <a onclick='AddTextForDDL("FITS","txt_term","FITS",null,null)'>FITS</a>
                                                        <a onclick='AddTextForDDL("REPO","txt_term","REPO",null,null)'>REPO</a>
                                                    </li>
                                                </ul>
                                            </div>
                                            <span id="system_type_error" class="field-validation-error text-danger" data-valmsg-replace="true">
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelForRequired(model => model.FormAction.payment_flag, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-xs-9">
                                        <div class="dropdown">
                                            <button class="btn btn-default dropdown-toggle" id="ddl_PaymentFlag_action" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                @Html.SpanFor(model => Model.FormAction.payment_flag_item, "Select...", new { @class = "selected-data" })
                                                @Html.TextBoxFor(model => Model.FormAction.payment_flag, htmlAttributes: new { @class = "selected-value hidden" })
                                                @Html.TextBoxFor(model => Model.FormAction.payment_flag_item, htmlAttributes: new { @class = "selected-data hidden" })
                                                <span class="caret"></span>
                                            </button>
                                            <div class="dropdown-menu">
                                                <div class="search-dropdown-menu">
                                                    <input type="text" data-action="@Url.Action("FillPaymentFlag", (string)this.ViewContext.RouteData.Values["controller"])" id="txt_PaymentFlag_action" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                    <i class="feather-icon icon-search"></i>
                                                </div>
                                                <hr>
                                                <ul id="ul_PaymentFlag_action"></ul>
                                            </div>
                                            <span id="payment_flag_error" class="field-validation-error text-danger" data-valmsg-replace="true">
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <hr>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <button type="submit" id="btnSave" class="btn btn-primary btn-round btn-main btn-form-save">+ Add @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])</button>
                            <button type="reset" class="btn btn-default btn-round btn-main" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                }
            </div>
        </div>
        <!-- modal-content -->
    </div>
    <!-- modal-dialog -->
</div>


@section Styles {
    @Styles.Render("~/bundles/SweetAlertCss")
    @Styles.Render("~/content/datatable")
    <style>
        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
        }

        .dataTables_filter {
            display: none;
        }

        .dataTables_processing {
            z-index: 3000;
            padding-top: 10px !important;
        }
    </style>
}


@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/SweetAlert")
    <script>

        var isUpdate = "@IsUpdate";
        var isDelete = "@IsDelete";

        $(document).ready(function () {
            $("#NavBar").html($('#NavPaymentMethod').val());
            //Function : Binding Table
            GM.PaymentMethod = {};
            GM.PaymentMethod.Table = $('#x-table-data').DataTable({
                dom: 'Bfrtip',
                select: false,
                searching: true,
                scrollY: '80vh',
                scrollX: true,
                order: [
                    [4, "desc"]
                ],
                buttons: [],
                processing: true,
                serverSide: true,
                ajax: {
                    "url": "@Url.Action("Search", (string)this.ViewContext.RouteData.Values["controller"])",
                    "type": "POST",
                    "error": function (jqXHR, textStatus, errorThrown) {
                        console.log(jqXHR);
                        console.log(textStatus);
                        console.log(errorThrown);
                    }
                },

                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
                select: true,
                columnDefs:
                [
                    { targets: 0, data: "RowNumber", orderable: false },
                    { targets: 1, data: "payment_method" },
                    { targets: 2, data: "payment_flag", visible: false },
                    { targets: 3, data: "payment_flag_item" },
                    { targets: 4, data: "system_type" },
                    { targets: 5, data: "description"},
                    {
                        targets: 6,
                        data: "payment_method",
                        className: "dt-body-center",
                        width: 60,
                        render: function (data, type, row, meta) {
                            var html = '';

                            if (isUpdate == "True") {
                                html += '<button class="btn btn-default btn-round" key="' + row.payment_method + '" form-mode="edit"   onclick="GM.PaymentMethod.Form(this)"><i class="feather-icon icon-edit"></i></button>';
                            }
                            else {
                                html += '<button class="btn btn-default btn-round" key="' + row.payment_method + '" form-mode="view"   onclick="GM.PaymentMethod.Form(this)"><i class="feather-icon icon-edit"></i></button>';
                            }

                            if (isDelete == "True") {
                                html += '<button class="btn btn-delete  btn-round" key="' + row.payment_method + '" form-mode="delete" onclick="GM.PaymentMethod.Form(this)"><i class="feather-icon icon-trash-2"></i></button>';
                            }
                            else {
                                html += '<button class="btn btn-delete  btn-round" key="' + row.payment_method + '" form-mode="delete" onclick="GM.PaymentMethod.Form(this)" disabled><i class="feather-icon icon-trash-2"></i></button>';
                            }
                            
                            return html;
                        }
                    }
                ],
                fixedColumns: {
                    leftColumns: 1,
                    rightColumns: 1
                },
            });

            //Function : Open Modal Add & Edit

            GM.PaymentMethod.Form = function (btn) {
                var mode = $(btn).attr("form-mode");
                    GM.Message.Clear();
                    GM.PaymentMethod.Form.Initial();
                    if (mode){
                        var key = $(btn).attr("key");
                        switch (mode){
                            case "add":
                                $(".modal-title").text("Create @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])");

                                $("#FormAction_payment_method").val(null);
                                $("#FormAction_payment_method").text(null);
                                $("#FormAction_description").val(null);
                                $("#FormAction_description").text(null);
                                $("#FormAction_payment_method").attr('readonly', false);
                                $("#FormAction_description").attr('readonly', false);
                                $("#ddl_term").removeAttr('disabled', 'disabled');
                                $("#ddl_term").find(".selected-data").text("Select...");
                                $('#ddl_PaymentFlag_action').removeAttr('disabled', 'disabled');
                                $("#ddl_PaymentFlag_action").find(".selected-data").text("Select...");

                                $('#action-form-modal').modal('show');
                                $("#action-form :submit").removeClass('btn-delete').addClass('btn-primary').text('Create');
                                $("#action-form :submit").removeAttr("onclick");
                                $("#action-form").attr("action", "@Url.Action("Create", "PaymentMethod")");

                                break;
                            case "edit":
                                GM.PaymentMethod.Form.Get({
                                    id: key,
                                    form: 'action-form',
                                    handler: function (response, status, jqxhr) {
                                    }
                                });

                                $(".modal-title").text("Edit @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])");

                                $('#FormAction_payment_method').attr('readonly', true);
                                $('#FormAction_description').attr('readonly', false);
                                $("#ddl_term").removeAttr('disabled', 'disabled');
                                $('#ddl_PaymentFlag_action').removeAttr('disabled', 'disabled');

                                $('#action-form-modal').modal('show');
                                $("#action-form :submit").removeAttr("onclick");
                                $("#action-form :submit").removeClass('btn-delete').addClass('btn-primary').text('Update');

                                $("#action-form").attr("action", "@Url.Action("Edit", "PaymentMethod")");

                                break;
                            case "delete":
                                $(".modal-title").text("Are you sure you want to delete this?");
                                GM.PaymentMethod.Form.Get({
                                    id: key,
                                    form: 'action-form',
                                    handler: function (response, status, jqxhr) {
                                    }
                                });
                                $("#action-form :submit").removeClass('btn-primary').addClass('btn-delete').text('Delete');

                                $('#FormAction_payment_method').attr('readonly', true);
                                $('#FormAction_description').attr('readonly', true);
                                $('#ddl_PaymentFlag_action').attr('disabled', 'disabled');
                                $("#ddl_term").attr('disabled', 'disabled');

                                $('#action-form-modal').modal('show');
                                $("#action-form :submit").attr("onclick", "Delete('" + key + "')");
                                $("#action-form").attr("action", "notpost");

                                break;
                            case "view":
                                GM.PaymentMethod.Form.Get({
                                    id: key,
                                    form: 'action-form',
                                    handler: function (response, status, jqxhr) {
                                    }
                                });

                                $('#FormAction_payment_method').attr('readonly', true);
                                $('#FormAction_description').attr('readonly', true);
                                $('#ddl_PaymentFlag_action').attr('disabled', 'disabled');
                                $("#ddl_term").attr('disabled', 'disabled');

                                $('#action-form-modal').modal('show');
                                $(".modal-title").text("View @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])");
                                $("#action-form :submit").removeAttr("onclick");
                                $("#action-form :submit").removeClass('btn-delete').addClass('btn-primary').text('Update');
                                $("#action-form :submit").attr('disabled', "disabled");

                                break;
                        }
                    }
            };

            //Function : Open ModalEdit
            GM.PaymentMethod.Form.Get = function (op) {
                $.get("@Url.Action("Edit", (string)this.ViewContext.RouteData.Values["controller"])", { id: op.id, t: GM.Time })
                 .done(function (response, status, jqxhr) {
                        // this is the "success" callback
                     GM.PaymentMethod.Form.DataBinding({ form: op.form, data: response });
                        op.handler(response)
                 })
                 .fail(function (jqxhr, status, error) {
                  });
            };

            GM.PaymentMethod.Table.SelectAll = function (check) {

                if ($(check)[0].checked) {
                    GM.PaymentMethod.Table.rows().select();
                }
                else {
                    GM.PaymentMethod.Table.rows().deselect();
                }
            }

        });

        //Function : Delete
        function Delete(payment_method) {
        swal({
            title: "Are you sure?",
            text: "",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            closeOnConfirm: true,
            closeOnCancel: true
        },
            function (isConfirm) {
                if (isConfirm) {
                    $('.spinner').css('display', 'block');
                    var data = { payment_method: payment_method };
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Deletes", (string)this.ViewContext.RouteData.Values["controller"])",
                        content: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        success: function (d) {
                            $('.spinner').css('display', 'none');
                            if (d.success) {
                                setTimeout(function () {
                                    swal("Deleted!", "Delete Success.", "success");
                                }, 100);
                                $('#action-form-modal').modal('hide');
                                GM.Message.Clear();
                                GM.PaymentMethod.Form.Search();
                                GM.PaymentMethod.Table.draw();
                            } else {
                                // DoSomethingElse()
                                swal("Deleted!", "Error : " + d.responseText, "error");
                            }
                        },
                        error: function (d) {
                            $('.spinner').css('display', 'none');
                            // TODO: Show error
                            GM.Message.Clear();
                        }
                    });
                } else {
                    GM.Message.Clear();
                    swal("Cancelled", "Your Data don't delete", "error");
                }
                });

           
        }
    </script>
    @Scripts.Render("~/module/paymentmethod")
    @Scripts.Render("~/module/validation")
}
