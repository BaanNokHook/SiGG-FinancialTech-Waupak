@model GM.Data.View.RPTransaction.RPReportTBMAViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

<section class="working-content">
    <div class="container-fluid container-fixed">
        <!-- PageTitle -->
        <div class="row row-fixed">
            <div class="col-lg-12 col-fixed">
                <div class="page-title">
                    <div class="breadcrumb-wrap">
                        <ol class="breadcrumb" id="NavBar">
                            @*<li>
                                    <a href="#">Home</a>
                                </li>
                                <li class="active">Transaction Process/Front Process</li>
                                <li class="active">Repo Report TBMA</li>*@
                        </ol>
                    </div>
                    <div class="title">
                        <h1>
                            Repo Report TBMA
                        </h1>
                    </div>
                </div>
            </div>
        </div>
        <!-- Content Zone -->
        <div class="row row-fixed">
            <div class="col-xs-12 col-fixed">
                <!-- Search Zone -->
                <div class="box-content" id="search-form-modal">
                    <div class="box-header">
                        <div class="left-item">
                            <div class="title">
                                <h3>SEARCH REPO REPORT TBMA</h3>
                            </div>
                        </div>
                        <div class="right-item">
                            @*<button id="user-master" class="btn btn-link less-more-option">
                                    Show more option
                                    <i class="feather-icon icon-chevron-down"></i>
                                </button>*@
                        </div>
                    </div>
                    @using (Html.BeginForm("Search", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { @class = "one-col-form", id = "search-form" }))
                    {
                        <div class="form-container form-horizontal">
                            <div class="row">
                                <div class="col-xs-12 form-wrapper-1100">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FormSearch.from_trade_date, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            <div class="input-group date">
                                                @Html.EditDateFor(model => model.FormSearch.from_trade_date, new { @class = "form-control date-time-picker-weekend" })
                                                <span class="input-group-addon">
                                                    <span class="feather-icon icon-calendar-weekend"></span>
                                                </span>
                                            </div>
                                        </div>
                                        @Html.LabelFor(model => model.FormSearch.to_trade_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-xs-4">
                                            <div class="input-group date">
                                                @Html.EditDateFor(model => model.FormSearch.to_trade_date, new { @class = "form-control date-time-picker-weekend" })
                                                <span class="input-group-addon">
                                                    <span class="feather-icon icon-calendar-weekend"></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FormSearch.trans_deal_type, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            <div class="dropdown">
                                                <button class="btn btn-default dropdown-toggle" id="ddl_trans_deal_type" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                    @Html.SpanFor(model => model.FormSearch.trans_deal_type_name, "Select...", new { @class = "selected-data" })
                                                    @Html.TextBoxFor(model => model.FormSearch.trans_deal_type, htmlAttributes: new { @class = "selected-value hidden" })
                                                    @Html.TextBoxFor(model => model.FormSearch.trans_deal_type_name, htmlAttributes: new { @class = "selected-data hidden" })
                                                    <span class="caret"></span>
                                                </button>
                                                <div class="dropdown-menu">
                                                    <div class="search-dropdown-menu">
                                                        <input type="text" data-action="@Url.Action("FillInstrument", "RPDealEntry")" id="txt_trans_deal_type" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                        <i class="feather-icon icon-search"></i>
                                                    </div>
                                                    <hr>
                                                    <ul id="ul_trans_deal_type"></ul>
                                                </div>
                                            </div>
                                        </div>
                                        @Html.LabelFor(mode => Model.FormSearch.counter_party_code, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-4">
                                            <div class="dropdown">
                                                <button class="btn btn-default dropdown-toggle" id="ddl_counterparty" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                    @Html.SpanFor(model => model.FormSearch.counter_party_name, "Select...", new { @class = "selected-data" })
                                                    @Html.TextBoxFor(model => model.FormSearch.counter_party_code, htmlAttributes: new { @class = "selected-value hidden" })
                                                    @Html.TextBoxFor(model => model.FormSearch.counter_party_name, htmlAttributes: new { @class = "selected-data hidden" })
                                                    <span class="caret"></span>
                                                </button>
                                                <div class="dropdown-menu">
                                                    <div class="search-dropdown-menu">
                                                        <input type="text" data-action="@Url.Action("FillCounterparty", "CounterPartyFund")" id="txt_counterparty" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                        <i class="feather-icon icon-search"></i>
                                                    </div>
                                                    <hr>
                                                    <ul id="ul_counterparty"></ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(mode => Model.FormSearch.port, htmlAttributes: new { @class = "control-label col-xs-2" })
                                        <div class="col-xs-10">
                                            <div class="dropdown">
                                                <button class="btn btn-default dropdown-toggle" id="ddl_port" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                    @Html.SpanFor(model => model.FormSearch.port_name, "Select...", new { @class = "selected-data" })
                                                    @Html.TextBoxFor(model => model.FormSearch.port, htmlAttributes: new { @class = "selected-value hidden" })
                                                    @Html.TextBoxFor(model => model.FormSearch.port_name, htmlAttributes: new { @class = "selected-data hidden" })
                                                    <span class="caret"></span>
                                                </button>
                                                <div class="dropdown-menu">
                                                    <div class="search-dropdown-menu">
                                                        <input type="text" data-action="@Url.Action("FillPortUser", "RPDealEntry")" id="txt_port" class="form-control" placeholder="Search..." aria-describedby="basic-addon1">
                                                        <i class="feather-icon icon-search"></i>
                                                    </div>
                                                    <hr>
                                                    <ul id="ul_port"></ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <hr>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <button class="btn btn-primary btn-round btn-main btn-search" type="submit">Confirm</button>
                                    <button class="btn btn-link btn-link-secondary" type="reset">Clear Data</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Div Detail -->
                <div class="box-content table-content">
                    <div class="group box-header-wrapper">
                        <div class="box-header">
                            <div class="left-item">
                                <div class="title">
                                    <h3>Details</h3>
                                </div>
                            </div>
                            <div class="right-item">
                                <div class="add-data">
                                    <div class="dropdown">

                                        <button class="btn btn-primary btn-round dropdown-toggle" type="button" id="btnExcel" form-mode="GenExcel" onclick="GM.RPReportTBMA.Form.GenExcel('Export')">
                                            Export Excel
                                        </button>
                                        <button class="btn btn-primary btn-round dropdown-toggle" type="button" id="btnExcelAll" form-mode="GenExcel" onclick="GM.RPReportTBMA.Form.GenExcel('ExportAll')">
                                            Export Excel All
                                        </button>
                                        <button class="btn btn-primary btn-round dropdown-toggle" type="button" id="btnAdd" form-mode="Genreport" onclick="GM.RPReportTBMA.Report(this)">
                                            @Html.DisplayString((string)this.ViewContext.RouteData.Values["controller"])
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="outer-table-wrapper">
                        <table id="x-table-data" class="table table-striped display nowrap" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th><input id="CheckAll" name="checkbox" type="checkbox" value="true"></th>
                                    <th>@Html.LabelFor(mode => mode.TableList.RowNumber)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trans_no)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.report_status)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.round_no)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trans_deal_type_name)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.port)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trader_id)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trader_engname)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.purpose)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trade_time)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.trade_date)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.settlement_date)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.buysell_type)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.counter_party)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.term)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.rate)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.from_trade_date)</th>
                                    <th>@Html.LabelFor(mode => mode.TableList.to_trade_date)</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("GenExcel", (string)this.ViewContext.RouteData.Values["controller"], FormMethod.Post, new { id = "download-form" }))
{
    <input type="hidden" name="id" id="downloadId" />
    <input type="hidden" name="from_date" id="downloadFromDate" />
    <input type="hidden" name="to_date" id="downloadToDate" />
    <input type="hidden" name="trans_deal_type" id="downloadTransDealType" />
    <input type="hidden" name="counter_party_code" id="downloadCounterPartyCode" />
    <input type="hidden" name="port" id="downloadPort" />
    <input type="hidden" name="exportType" id="downloadExportType" />
}

@section Styles {
    @Styles.Render("~/bundles/SweetAlertCss")
    @Styles.Render("~/content/datatable")
    <style>
        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
        }

        .dataTables_filter {
            display: none;
        }

        .dataTables_processing {
            z-index: 3000;
            padding-top: 10px !important;
        }

        #search-form .text-box {
            width: 235px !important;
        }

        #search-form .dropdown {
            width: 235px !important;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/SweetAlert")

    <script>
        $(document).ready(function () {

            

            $("#NavBar").html($('#NavRPReportTBMA').val());
            
        });
        //End document.ready
        //Function : Report
        function Report() {
            var rowData = $('#x-table-data').DataTable().rows($('#x-table-data .filter-ck:checked').closest('tr')).data();
            var transNoList = [];
            for (var i = 0; i < rowData.length; i++) {
                //console.log(rowData[i].trans_no);
                transNoList.push(rowData[i].trans_no);
            }

            if (transNoList.length > 0) {
                swal({
                    title: "Comfirm Report TBMA?",
                    text: "",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Yes",
                    cancelButtonText: "No",
                    closeOnConfirm: true,
                    closeOnCancel: true
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $('.spinner').css('display', 'block'); // Open Loading
                            GM.Message.Clear();
                            var dataToPost = { id : JSON.stringify(transNoList)};
                            $.post('@Url.Action("Send", "RPReportTBMA")', dataToPost)
                                .done(function (response) {
                                    $('.spinner').css('display', 'none'); // Close Loading
                                    GM.Unmask();
                                    console.log(response);
                                    if (response[0].Message == "") {
                                        swal({
                                            title: "Complete",
                                            text: "Report TBMA Success",
                                            type: "success",
                                            showCancelButton: false,
                                            confirmButtonClass: "btn-success",
                                            confirmButtonText: "Ok",
                                            closeOnConfirm: true
                                        },
                                        function (isConfirm) {
                                            GM.RPReportTBMA.Form.Search();
                                        });
                                    } else {
                                        GM.Message.Error('.modal-body', response[0].Message);
                                        swal("Fail", response[0].Message, "error");
                                        GM.RPReportTBMA.Form.Search();
                                    }
                                });
                        } else {
                            GM.Message.Clear();
                        }
                    });
            }
            else {
                swal("Warning", "Please Select [Trans No] To Report TBMA", "error");
            }
        }

        function FormatDecimal(value, point) {
            const f = Math.pow(10, point);
            var x = (Math.floor(value * f) / f).toFixed(point);
            return x.toString().replace(/\B(?=(?:\d{3})+(?!\d))/g, ",");
        }

    </script>
    @Scripts.Render("~/module/rpreporttbma")
}


